{
	"id": "5e4fb6cf81476075fad4c2f984bc1308",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Counter.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\n// IMPORTING NECESSARY CONTRACTS\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CounterContract is Ownable(msg.sender){\r\n    // DECLARING VARIABLES\r\n    uint public count = 0;\r\n    bool public counterActivated = true;\r\n\r\n    // A MODIFIER TO CHECK IF COUNT CAN BE UPDATED\r\n    modifier onlyCounterActivated{\r\n        require(counterActivated == true, \"Counter can be updated only when activated\");\r\n        _;\r\n    }\r\n\r\n    // A FUNCTION TO UPDATE THE COUNTER ACTIVATED\r\n    function setCounterActivated(bool _counterActivated) external onlyOwner{\r\n        counterActivated = _counterActivated;\r\n    }\r\n\r\n    // A FUNCTION TO INCREASE OR DECREASE COUNT\r\n    function increaseCount() external onlyCounterActivated{\r\n        count++;\r\n    }\r\n\r\n    function decreaseCount() external onlyCounterActivated{\r\n        count--;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Counter.sol": {
				"CounterContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "counterActivated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decreaseCount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increaseCount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_counterActivated",
									"type": "bool"
								}
							],
							"name": "setCounterActivated",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Counter.sol\":150:908  contract CounterContract is Ownable(msg.sender){... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Counter.sol\":252:253  0 */\n  0x00\n    /* \"contracts/Counter.sol\":232:253  uint public count = 0 */\n  0x01\n  sstore\n    /* \"contracts/Counter.sol\":291:295  true */\n  0x01\n    /* \"contracts/Counter.sol\":260:295  bool public counterActivated = true */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Counter.sol\":150:908  contract CounterContract is Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Counter.sol\":186:196  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Counter.sol\":150:908  contract CounterContract is Ownable(msg.sender){... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_11:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_12:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_17\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_13:\n    /* \"#utility.yul\":328:352   */\n  tag_19\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_6:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_21\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_13\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Counter.sol\":150:908  contract CounterContract is Ownable(msg.sender){... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Counter.sol\":150:908  contract CounterContract is Ownable(msg.sender){... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xabd1b73d\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xabd1b73d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe834cbb3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xffc959f7\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x06661abd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x68fcb1c1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Counter.sol\":232:253  uint public count = 0 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":554:680  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":737:817  function increaseCount() external onlyCounterActivated{... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/Counter.sol\":825:905  function decreaseCount() external onlyCounterActivated{... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Counter.sol\":260:295  bool public counterActivated = true */\n    tag_10:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":232:253  uint public count = 0 */\n    tag_13:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Counter.sol\":554:680  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/Counter.sol\":655:672  _counterActivated */\n      dup1\n        /* \"contracts/Counter.sol\":636:652  counterActivated */\n      0x02\n      0x00\n        /* \"contracts/Counter.sol\":636:672  counterActivated = _counterActivated */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":554:680  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Counter.sol\":737:817  function increaseCount() external onlyCounterActivated{... */\n    tag_27:\n        /* \"contracts/Counter.sol\":424:428  true */\n      0x01\n        /* \"contracts/Counter.sol\":404:428  counterActivated == true */\n      iszero\n      iszero\n        /* \"contracts/Counter.sol\":404:420  counterActivated */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":404:428  counterActivated == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Counter.sol\":396:475  require(counterActivated == true, \"Counter can be updated only when activated\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/Counter.sol\":802:807  count */\n      0x01\n      0x00\n        /* \"contracts/Counter.sol\":802:809  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":737:817  function increaseCount() external onlyCounterActivated{... */\n      jump\t// out\n        /* \"contracts/Counter.sol\":825:905  function decreaseCount() external onlyCounterActivated{... */\n    tag_29:\n        /* \"contracts/Counter.sol\":424:428  true */\n      0x01\n        /* \"contracts/Counter.sol\":404:428  counterActivated == true */\n      iszero\n      iszero\n        /* \"contracts/Counter.sol\":404:420  counterActivated */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":404:428  counterActivated == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Counter.sol\":396:475  require(counterActivated == true, \"Counter can be updated only when activated\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_51\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"contracts/Counter.sol\":890:895  count */\n      0x01\n      0x00\n        /* \"contracts/Counter.sol\":890:897  count-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":825:905  function decreaseCount() external onlyCounterActivated{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_64\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Counter.sol\":260:295  bool public counterActivated = true */\n    tag_35:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_23\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_76:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_77:\n        /* \"#utility.yul\":177:201   */\n      tag_97\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_76\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_99\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_77\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_79:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:859   */\n    tag_81:\n        /* \"#utility.yul\":803:810   */\n      0x00\n        /* \"#utility.yul\":846:851   */\n      dup2\n        /* \"#utility.yul\":839:852   */\n      iszero\n        /* \"#utility.yul\":832:853   */\n      iszero\n        /* \"#utility.yul\":821:853   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":865:981   */\n    tag_82:\n        /* \"#utility.yul\":935:956   */\n      tag_105\n        /* \"#utility.yul\":950:955   */\n      dup2\n        /* \"#utility.yul\":935:956   */\n      tag_81\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":928:933   */\n      dup2\n        /* \"#utility.yul\":925:957   */\n      eq\n        /* \"#utility.yul\":915:975   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":915:975   */\n    tag_106:\n        /* \"#utility.yul\":865:981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":987:1120   */\n    tag_83:\n        /* \"#utility.yul\":1030:1035   */\n      0x00\n        /* \"#utility.yul\":1068:1074   */\n      dup2\n        /* \"#utility.yul\":1055:1075   */\n      calldataload\n        /* \"#utility.yul\":1046:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":1084:1114   */\n      tag_108\n        /* \"#utility.yul\":1108:1113   */\n      dup2\n        /* \"#utility.yul\":1084:1114   */\n      tag_82\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":987:1120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1449   */\n    tag_18:\n        /* \"#utility.yul\":1182:1188   */\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1318   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1237:1316   */\n      tag_111\n      tag_79\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1199:1318   */\n    tag_110:\n        /* \"#utility.yul\":1357:1358   */\n      0x00\n        /* \"#utility.yul\":1382:1432   */\n      tag_112\n        /* \"#utility.yul\":1424:1431   */\n      dup5\n        /* \"#utility.yul\":1415:1421   */\n      dup3\n        /* \"#utility.yul\":1404:1413   */\n      dup6\n        /* \"#utility.yul\":1400:1422   */\n      add\n        /* \"#utility.yul\":1382:1432   */\n      tag_83\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1372:1432   */\n      swap2\n      pop\n        /* \"#utility.yul\":1328:1442   */\n      pop\n        /* \"#utility.yul\":1126:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1581   */\n    tag_84:\n        /* \"#utility.yul\":1492:1499   */\n      0x00\n        /* \"#utility.yul\":1532:1574   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1525:1530   */\n      dup3\n        /* \"#utility.yul\":1521:1575   */\n      and\n        /* \"#utility.yul\":1510:1575   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1587:1683   */\n    tag_85:\n        /* \"#utility.yul\":1624:1631   */\n      0x00\n        /* \"#utility.yul\":1653:1677   */\n      tag_115\n        /* \"#utility.yul\":1671:1676   */\n      dup3\n        /* \"#utility.yul\":1653:1677   */\n      tag_84\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1642:1677   */\n      swap1\n      pop\n        /* \"#utility.yul\":1587:1683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1689:1807   */\n    tag_86:\n        /* \"#utility.yul\":1776:1800   */\n      tag_117\n        /* \"#utility.yul\":1794:1799   */\n      dup2\n        /* \"#utility.yul\":1776:1800   */\n      tag_85\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1771:1774   */\n      dup3\n        /* \"#utility.yul\":1764:1801   */\n      mstore\n        /* \"#utility.yul\":1689:1807   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1813:2035   */\n    tag_25:\n        /* \"#utility.yul\":1906:1910   */\n      0x00\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1933:1942   */\n      dup3\n        /* \"#utility.yul\":1929:1947   */\n      add\n        /* \"#utility.yul\":1921:1947   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2028   */\n      tag_119\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2014:2023   */\n      dup4\n        /* \"#utility.yul\":2010:2027   */\n      add\n        /* \"#utility.yul\":2001:2007   */\n      dup5\n        /* \"#utility.yul\":1957:2028   */\n      tag_86\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1813:2035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2163   */\n    tag_87:\n        /* \"#utility.yul\":2114:2138   */\n      tag_121\n        /* \"#utility.yul\":2132:2137   */\n      dup2\n        /* \"#utility.yul\":2114:2138   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2107:2112   */\n      dup2\n        /* \"#utility.yul\":2104:2139   */\n      eq\n        /* \"#utility.yul\":2094:2157   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2150:2151   */\n      dup1\n        /* \"#utility.yul\":2143:2155   */\n      revert\n        /* \"#utility.yul\":2094:2157   */\n    tag_122:\n        /* \"#utility.yul\":2041:2163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2308   */\n    tag_88:\n        /* \"#utility.yul\":2215:2220   */\n      0x00\n        /* \"#utility.yul\":2253:2259   */\n      dup2\n        /* \"#utility.yul\":2240:2260   */\n      calldataload\n        /* \"#utility.yul\":2231:2260   */\n      swap1\n      pop\n        /* \"#utility.yul\":2269:2302   */\n      tag_124\n        /* \"#utility.yul\":2296:2301   */\n      dup2\n        /* \"#utility.yul\":2269:2302   */\n      tag_87\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2169:2308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2643   */\n    tag_32:\n        /* \"#utility.yul\":2373:2379   */\n      0x00\n        /* \"#utility.yul\":2422:2424   */\n      0x20\n        /* \"#utility.yul\":2410:2419   */\n      dup3\n        /* \"#utility.yul\":2401:2408   */\n      dup5\n        /* \"#utility.yul\":2397:2420   */\n      sub\n        /* \"#utility.yul\":2393:2425   */\n      slt\n        /* \"#utility.yul\":2390:2509   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2428:2507   */\n      tag_127\n      tag_79\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2390:2509   */\n    tag_126:\n        /* \"#utility.yul\":2548:2549   */\n      0x00\n        /* \"#utility.yul\":2573:2626   */\n      tag_128\n        /* \"#utility.yul\":2618:2625   */\n      dup5\n        /* \"#utility.yul\":2609:2615   */\n      dup3\n        /* \"#utility.yul\":2598:2607   */\n      dup6\n        /* \"#utility.yul\":2594:2616   */\n      add\n        /* \"#utility.yul\":2573:2626   */\n      tag_88\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2563:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2519:2636   */\n      pop\n        /* \"#utility.yul\":2314:2643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2758   */\n    tag_89:\n        /* \"#utility.yul\":2730:2751   */\n      tag_130\n        /* \"#utility.yul\":2745:2750   */\n      dup2\n        /* \"#utility.yul\":2730:2751   */\n      tag_81\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2725:2728   */\n      dup3\n        /* \"#utility.yul\":2718:2752   */\n      mstore\n        /* \"#utility.yul\":2649:2758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2974   */\n    tag_37:\n        /* \"#utility.yul\":2851:2855   */\n      0x00\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2878:2887   */\n      dup3\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"#utility.yul\":2866:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:2967   */\n      tag_132\n        /* \"#utility.yul\":2964:2965   */\n      0x00\n        /* \"#utility.yul\":2953:2962   */\n      dup4\n        /* \"#utility.yul\":2949:2966   */\n      add\n        /* \"#utility.yul\":2940:2946   */\n      dup5\n        /* \"#utility.yul\":2902:2967   */\n      tag_89\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2764:2974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2980:3149   */\n    tag_90:\n        /* \"#utility.yul\":3064:3075   */\n      0x00\n        /* \"#utility.yul\":3098:3104   */\n      dup3\n        /* \"#utility.yul\":3093:3096   */\n      dup3\n        /* \"#utility.yul\":3086:3105   */\n      mstore\n        /* \"#utility.yul\":3138:3142   */\n      0x20\n        /* \"#utility.yul\":3133:3136   */\n      dup3\n        /* \"#utility.yul\":3129:3143   */\n      add\n        /* \"#utility.yul\":3114:3143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2980:3149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3155:3384   */\n    tag_91:\n        /* \"#utility.yul\":3295:3329   */\n      0x436f756e7465722063616e2062652075706461746564206f6e6c79207768656e\n        /* \"#utility.yul\":3291:3292   */\n      0x00\n        /* \"#utility.yul\":3283:3289   */\n      dup3\n        /* \"#utility.yul\":3279:3293   */\n      add\n        /* \"#utility.yul\":3272:3330   */\n      mstore\n        /* \"#utility.yul\":3364:3376   */\n      0x2061637469766174656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"#utility.yul\":3351:3357   */\n      dup3\n        /* \"#utility.yul\":3347:3362   */\n      add\n        /* \"#utility.yul\":3340:3377   */\n      mstore\n        /* \"#utility.yul\":3155:3384   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3390:3756   */\n    tag_92:\n        /* \"#utility.yul\":3532:3535   */\n      0x00\n        /* \"#utility.yul\":3553:3620   */\n      tag_136\n        /* \"#utility.yul\":3617:3619   */\n      0x2a\n        /* \"#utility.yul\":3612:3615   */\n      dup4\n        /* \"#utility.yul\":3553:3620   */\n      tag_90\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3546:3620   */\n      swap2\n      pop\n        /* \"#utility.yul\":3629:3722   */\n      tag_137\n        /* \"#utility.yul\":3718:3721   */\n      dup3\n        /* \"#utility.yul\":3629:3722   */\n      tag_91\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3747:3749   */\n      0x40\n        /* \"#utility.yul\":3742:3745   */\n      dup3\n        /* \"#utility.yul\":3738:3750   */\n      add\n        /* \"#utility.yul\":3731:3750   */\n      swap1\n      pop\n        /* \"#utility.yul\":3390:3756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3762:4181   */\n    tag_51:\n        /* \"#utility.yul\":3928:3932   */\n      0x00\n        /* \"#utility.yul\":3966:3968   */\n      0x20\n        /* \"#utility.yul\":3955:3964   */\n      dup3\n        /* \"#utility.yul\":3951:3969   */\n      add\n        /* \"#utility.yul\":3943:3969   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4024   */\n      dup2\n        /* \"#utility.yul\":4009:4013   */\n      dup2\n        /* \"#utility.yul\":4005:4025   */\n      sub\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3990:3999   */\n      dup4\n        /* \"#utility.yul\":3986:4003   */\n      add\n        /* \"#utility.yul\":3979:4026   */\n      mstore\n        /* \"#utility.yul\":4043:4174   */\n      tag_139\n        /* \"#utility.yul\":4169:4173   */\n      dup2\n        /* \"#utility.yul\":4043:4174   */\n      tag_92\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4035:4174   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:4181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4187:4367   */\n    tag_93:\n        /* \"#utility.yul\":4235:4312   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4232:4233   */\n      0x00\n        /* \"#utility.yul\":4225:4313   */\n      mstore\n        /* \"#utility.yul\":4332:4336   */\n      0x11\n        /* \"#utility.yul\":4329:4330   */\n      0x04\n        /* \"#utility.yul\":4322:4337   */\n      mstore\n        /* \"#utility.yul\":4356:4360   */\n      0x24\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4346:4361   */\n      revert\n        /* \"#utility.yul\":4373:4606   */\n    tag_54:\n        /* \"#utility.yul\":4412:4415   */\n      0x00\n        /* \"#utility.yul\":4435:4459   */\n      tag_142\n        /* \"#utility.yul\":4453:4458   */\n      dup3\n        /* \"#utility.yul\":4435:4459   */\n      tag_76\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4426:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4481:4547   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4474:4479   */\n      dup3\n        /* \"#utility.yul\":4471:4548   */\n      sub\n        /* \"#utility.yul\":4468:4571   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4551:4569   */\n      tag_144\n      tag_93\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4468:4571   */\n    tag_143:\n        /* \"#utility.yul\":4598:4599   */\n      0x01\n        /* \"#utility.yul\":4591:4596   */\n      dup3\n        /* \"#utility.yul\":4587:4600   */\n      add\n        /* \"#utility.yul\":4580:4600   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4783   */\n    tag_60:\n        /* \"#utility.yul\":4651:4654   */\n      0x00\n        /* \"#utility.yul\":4674:4698   */\n      tag_146\n        /* \"#utility.yul\":4692:4697   */\n      dup3\n        /* \"#utility.yul\":4674:4698   */\n      tag_76\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4665:4698   */\n      swap2\n      pop\n        /* \"#utility.yul\":4720:4724   */\n      0x00\n        /* \"#utility.yul\":4713:4718   */\n      dup3\n        /* \"#utility.yul\":4710:4725   */\n      sub\n        /* \"#utility.yul\":4707:4748   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":4728:4746   */\n      tag_148\n      tag_93\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4707:4748   */\n    tag_147:\n        /* \"#utility.yul\":4775:4776   */\n      0x01\n        /* \"#utility.yul\":4768:4773   */\n      dup3\n        /* \"#utility.yul\":4764:4777   */\n      sub\n        /* \"#utility.yul\":4757:4777   */\n      swap1\n      pop\n        /* \"#utility.yul\":4612:4783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a71a3e8944b8e7cc138153454e96e2b1914d4bf96693409948d41da7083cf1a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 180,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600155600160025f6101000a81548160ff02191690831515021790555034801561002d575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009691906101b4565b60405180910390fd5b6100ae816100b460201b60201c565b506101cd565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019e82610175565b9050919050565b6101ae81610194565b82525050565b5f6020820190506101c75f8301846101a5565b92915050565b610738806101da5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063abd1b73d11610059578063abd1b73d146100ec578063e834cbb3146100f6578063f2fde38b14610100578063ffc959f71461011c57610086565b806306661abd1461008a57806368fcb1c1146100a8578063715018a6146100c45780638da5cb5b146100ce575b5f80fd5b61009261013a565b60405161009f9190610477565b60405180910390f35b6100c260048036038101906100bd91906104c9565b610140565b005b6100cc610164565b005b6100d6610177565b6040516100e39190610533565b60405180910390f35b6100f461019e565b005b6100fe61020c565b005b61011a60048036038101906101159190610576565b61027a565b005b6101246102fe565b60405161013191906105b0565b60405180910390f35b60015481565b610148610310565b8060025f6101000a81548160ff02191690831515021790555050565b61016c610310565b6101755f610397565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001151560025f9054906101000a900460ff161515146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90610649565b60405180910390fd5b60015f81548092919061020590610694565b9190505550565b6001151560025f9054906101000a900460ff16151514610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025890610649565b60405180910390fd5b60015f815480929190610273906106db565b9190505550565b610282610310565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102f2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102e99190610533565b60405180910390fd5b6102fb81610397565b50565b60025f9054906101000a900460ff1681565b610318610458565b73ffffffffffffffffffffffffffffffffffffffff16610336610177565b73ffffffffffffffffffffffffffffffffffffffff161461039557610359610458565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161038c9190610533565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6104718161045f565b82525050565b5f60208201905061048a5f830184610468565b92915050565b5f80fd5b5f8115159050919050565b6104a881610494565b81146104b2575f80fd5b50565b5f813590506104c38161049f565b92915050565b5f602082840312156104de576104dd610490565b5b5f6104eb848285016104b5565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051d826104f4565b9050919050565b61052d81610513565b82525050565b5f6020820190506105465f830184610524565b92915050565b61055581610513565b811461055f575f80fd5b50565b5f813590506105708161054c565b92915050565b5f6020828403121561058b5761058a610490565b5b5f61059884828501610562565b91505092915050565b6105aa81610494565b82525050565b5f6020820190506105c35f8301846105a1565b92915050565b5f82825260208201905092915050565b7f436f756e7465722063616e2062652075706461746564206f6e6c79207768656e5f8201527f2061637469766174656400000000000000000000000000000000000000000000602082015250565b5f610633602a836105c9565b915061063e826105d9565b604082019050919050565b5f6020820190508181035f83015261066081610627565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61069e8261045f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106d0576106cf610667565b5b600182019050919050565b5f6106e58261045f565b91505f82036106f7576106f6610667565b5b60018203905091905056fea26469706673582212205a71a3e8944b8e7cc138153454e96e2b1914d4bf96693409948d41da7083cf1a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE DUP2 PUSH2 0xB4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1CD JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E DUP3 PUSH2 0x175 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE DUP2 PUSH2 0x194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x738 DUP1 PUSH2 0x1DA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABD1B73D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xE834CBB3 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFFC959F7 EQ PUSH2 0x11C JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x68FCB1C1 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x164 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x148 PUSH2 0x310 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x16C PUSH2 0x310 JUMP JUMPDEST PUSH2 0x175 PUSH0 PUSH2 0x397 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x205 SWAP1 PUSH2 0x694 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258 SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x273 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0x310 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB DUP2 PUSH2 0x397 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x458 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x336 PUSH2 0x177 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x395 JUMPI PUSH2 0x359 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x45F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48A PUSH0 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A8 DUP2 PUSH2 0x494 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C3 DUP2 PUSH2 0x49F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x490 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4EB DUP5 DUP3 DUP6 ADD PUSH2 0x4B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51D DUP3 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D DUP2 PUSH2 0x513 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x546 PUSH0 DUP4 ADD DUP5 PUSH2 0x524 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0x513 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x54C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58B JUMPI PUSH2 0x58A PUSH2 0x490 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x598 DUP5 DUP3 DUP6 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722063616E2062652075706461746564206F6E6C79207768656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2061637469766174656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x633 PUSH1 0x2A DUP4 PUSH2 0x5C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x63E DUP3 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x660 DUP2 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x69E DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x6D0 JUMPI PUSH2 0x6CF PUSH2 0x667 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6E5 DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x6F7 JUMPI PUSH2 0x6F6 PUSH2 0x667 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS PUSH18 0xA3E8944B8E7CC138153454E96E2B1914D4BF SWAP7 PUSH10 0x3409948D41DA7083CF1A PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "150:758:2:-:0;;;252:1;232:21;;291:4;260:35;;;;;;;;;;;;;;;;;;;;150:758;;;;;;;;;;186:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;150:758:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;150:758:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 784,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1112,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 919,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@count_187": {
									"entryPoint": 314,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@counterActivated_190": {
									"entryPoint": 766,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decreaseCount_231": {
									"entryPoint": 524,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseCount_222": {
									"entryPoint": 414,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 375,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 356,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCounterActivated_213": {
									"entryPoint": 320,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 634,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4786:3",
										"nodeType": "YulBlock",
										"src": "0:4786:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "482:35:3",
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nativeSrc": "492:19:3",
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:3",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nativeSrc": "502:9:3",
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:3",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nativeSrc": "612:28:3",
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:3",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:3",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nativeSrc": "622:12:3",
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nativeSrc": "622:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nativeSrc": "735:28:3",
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:3",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:3",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nativeSrc": "745:12:3",
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nativeSrc": "745:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nativeSrc": "811:48:3",
													"nodeType": "YulBlock",
													"src": "811:48:3",
													"statements": [
														{
															"nativeSrc": "821:32:3",
															"nodeType": "YulAssignment",
															"src": "821:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "846:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "846:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "839:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "839:6:3"
																		},
																		"nativeSrc": "839:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "839:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "832:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:3"
																},
																"nativeSrc": "832:21:3",
																"nodeType": "YulFunctionCall",
																"src": "832:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "821:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "821:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "769:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "793:5:3",
														"nodeType": "YulTypedName",
														"src": "793:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "803:7:3",
														"nodeType": "YulTypedName",
														"src": "803:7:3",
														"type": ""
													}
												],
												"src": "769:90:3"
											},
											{
												"body": {
													"nativeSrc": "905:76:3",
													"nodeType": "YulBlock",
													"src": "905:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "959:16:3",
																"nodeType": "YulBlock",
																"src": "959:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:3",
																					"nodeType": "YulLiteral",
																					"src": "968:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:3",
																					"nodeType": "YulLiteral",
																					"src": "971:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "961:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:3"
																			},
																			"nativeSrc": "961:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:3"
																		},
																		"nativeSrc": "961:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "928:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "950:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "950:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "935:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "935:14:3"
																				},
																				"nativeSrc": "935:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "935:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "925:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "925:2:3"
																		},
																		"nativeSrc": "925:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "925:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "918:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:3"
																},
																"nativeSrc": "918:40:3",
																"nodeType": "YulFunctionCall",
																"src": "918:40:3"
															},
															"nativeSrc": "915:60:3",
															"nodeType": "YulIf",
															"src": "915:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "865:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:3",
														"nodeType": "YulTypedName",
														"src": "898:5:3",
														"type": ""
													}
												],
												"src": "865:116:3"
											},
											{
												"body": {
													"nativeSrc": "1036:84:3",
													"nodeType": "YulBlock",
													"src": "1036:84:3",
													"statements": [
														{
															"nativeSrc": "1046:29:3",
															"nodeType": "YulAssignment",
															"src": "1046:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1068:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1068:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1055:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1055:12:3"
																},
																"nativeSrc": "1055:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1055:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1046:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1046:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1108:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1108:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1084:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "1084:23:3"
																},
																"nativeSrc": "1084:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1084:30:3"
															},
															"nativeSrc": "1084:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "1084:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "987:133:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1014:6:3",
														"nodeType": "YulTypedName",
														"src": "1014:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1022:3:3",
														"nodeType": "YulTypedName",
														"src": "1022:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1030:5:3",
														"nodeType": "YulTypedName",
														"src": "1030:5:3",
														"type": ""
													}
												],
												"src": "987:133:3"
											},
											{
												"body": {
													"nativeSrc": "1189:260:3",
													"nodeType": "YulBlock",
													"src": "1189:260:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1235:83:3",
																"nodeType": "YulBlock",
																"src": "1235:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1237:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1237:77:3"
																			},
																			"nativeSrc": "1237:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1237:79:3"
																		},
																		"nativeSrc": "1237:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1210:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1219:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1206:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:3"
																		},
																		"nativeSrc": "1206:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1231:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1202:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:3"
																},
																"nativeSrc": "1202:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1202:32:3"
															},
															"nativeSrc": "1199:119:3",
															"nodeType": "YulIf",
															"src": "1199:119:3"
														},
														{
															"nativeSrc": "1328:114:3",
															"nodeType": "YulBlock",
															"src": "1328:114:3",
															"statements": [
																{
																	"nativeSrc": "1343:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1343:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1357:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1347:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1347:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1372:60:3",
																	"nodeType": "YulAssignment",
																	"src": "1372:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1404:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1404:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1415:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1415:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1400:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1400:3:3"
																				},
																				"nativeSrc": "1400:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1400:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1424:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1424:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1382:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1382:17:3"
																		},
																		"nativeSrc": "1382:50:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1382:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1372:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1372:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "1126:323:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1159:9:3",
														"nodeType": "YulTypedName",
														"src": "1159:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1170:7:3",
														"nodeType": "YulTypedName",
														"src": "1170:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1182:6:3",
														"nodeType": "YulTypedName",
														"src": "1182:6:3",
														"type": ""
													}
												],
												"src": "1126:323:3"
											},
											{
												"body": {
													"nativeSrc": "1500:81:3",
													"nodeType": "YulBlock",
													"src": "1500:81:3",
													"statements": [
														{
															"nativeSrc": "1510:65:3",
															"nodeType": "YulAssignment",
															"src": "1510:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1525:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1525:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1532:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1532:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1521:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:3"
																},
																"nativeSrc": "1521:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1521:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1510:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1510:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1455:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1482:5:3",
														"nodeType": "YulTypedName",
														"src": "1482:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1492:7:3",
														"nodeType": "YulTypedName",
														"src": "1492:7:3",
														"type": ""
													}
												],
												"src": "1455:126:3"
											},
											{
												"body": {
													"nativeSrc": "1632:51:3",
													"nodeType": "YulBlock",
													"src": "1632:51:3",
													"statements": [
														{
															"nativeSrc": "1642:35:3",
															"nodeType": "YulAssignment",
															"src": "1642:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1671:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1671:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1653:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1653:17:3"
																},
																"nativeSrc": "1653:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1653:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1642:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1642:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1587:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1614:5:3",
														"nodeType": "YulTypedName",
														"src": "1614:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1624:7:3",
														"nodeType": "YulTypedName",
														"src": "1624:7:3",
														"type": ""
													}
												],
												"src": "1587:96:3"
											},
											{
												"body": {
													"nativeSrc": "1754:53:3",
													"nodeType": "YulBlock",
													"src": "1754:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1771:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1771:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1794:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1794:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1776:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1776:17:3"
																		},
																		"nativeSrc": "1776:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1764:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:3"
																},
																"nativeSrc": "1764:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1764:37:3"
															},
															"nativeSrc": "1764:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1764:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1689:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1742:5:3",
														"nodeType": "YulTypedName",
														"src": "1742:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1749:3:3",
														"nodeType": "YulTypedName",
														"src": "1749:3:3",
														"type": ""
													}
												],
												"src": "1689:118:3"
											},
											{
												"body": {
													"nativeSrc": "1911:124:3",
													"nodeType": "YulBlock",
													"src": "1911:124:3",
													"statements": [
														{
															"nativeSrc": "1921:26:3",
															"nodeType": "YulAssignment",
															"src": "1921:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1933:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1933:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1944:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1944:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1929:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1929:3:3"
																},
																"nativeSrc": "1929:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1929:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1921:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1921:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2001:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2001:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2014:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2025:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2025:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2010:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:3"
																		},
																		"nativeSrc": "2010:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2010:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1957:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1957:43:3"
																},
																"nativeSrc": "1957:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1957:71:3"
															},
															"nativeSrc": "1957:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1957:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1813:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1883:9:3",
														"nodeType": "YulTypedName",
														"src": "1883:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1895:6:3",
														"nodeType": "YulTypedName",
														"src": "1895:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1906:4:3",
														"nodeType": "YulTypedName",
														"src": "1906:4:3",
														"type": ""
													}
												],
												"src": "1813:222:3"
											},
											{
												"body": {
													"nativeSrc": "2084:79:3",
													"nodeType": "YulBlock",
													"src": "2084:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:16:3",
																"nodeType": "YulBlock",
																"src": "2141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2150:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2153:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2143:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:3"
																			},
																			"nativeSrc": "2143:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:12:3"
																		},
																		"nativeSrc": "2143:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2107:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2107:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2132:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2132:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2114:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2114:17:3"
																				},
																				"nativeSrc": "2114:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2114:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2104:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2104:2:3"
																		},
																		"nativeSrc": "2104:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2104:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2097:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:3"
																},
																"nativeSrc": "2097:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2097:43:3"
															},
															"nativeSrc": "2094:63:3",
															"nodeType": "YulIf",
															"src": "2094:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2041:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2077:5:3",
														"nodeType": "YulTypedName",
														"src": "2077:5:3",
														"type": ""
													}
												],
												"src": "2041:122:3"
											},
											{
												"body": {
													"nativeSrc": "2221:87:3",
													"nodeType": "YulBlock",
													"src": "2221:87:3",
													"statements": [
														{
															"nativeSrc": "2231:29:3",
															"nodeType": "YulAssignment",
															"src": "2231:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2253:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2253:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2240:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2240:12:3"
																},
																"nativeSrc": "2240:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2240:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2231:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2231:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2296:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2296:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2269:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2269:26:3"
																},
																"nativeSrc": "2269:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2269:33:3"
															},
															"nativeSrc": "2269:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2269:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2169:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2199:6:3",
														"nodeType": "YulTypedName",
														"src": "2199:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2207:3:3",
														"nodeType": "YulTypedName",
														"src": "2207:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2215:5:3",
														"nodeType": "YulTypedName",
														"src": "2215:5:3",
														"type": ""
													}
												],
												"src": "2169:139:3"
											},
											{
												"body": {
													"nativeSrc": "2380:263:3",
													"nodeType": "YulBlock",
													"src": "2380:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2426:83:3",
																"nodeType": "YulBlock",
																"src": "2426:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2428:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2428:77:3"
																			},
																			"nativeSrc": "2428:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2428:79:3"
																		},
																		"nativeSrc": "2428:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2428:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2401:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2401:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2410:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2410:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2397:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:3"
																		},
																		"nativeSrc": "2397:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2422:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2422:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2393:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:3"
																},
																"nativeSrc": "2393:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2393:32:3"
															},
															"nativeSrc": "2390:119:3",
															"nodeType": "YulIf",
															"src": "2390:119:3"
														},
														{
															"nativeSrc": "2519:117:3",
															"nodeType": "YulBlock",
															"src": "2519:117:3",
															"statements": [
																{
																	"nativeSrc": "2534:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2534:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2548:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2548:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2538:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2538:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2563:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2563:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2598:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2598:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2609:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2609:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2594:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2594:3:3"
																				},
																				"nativeSrc": "2594:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2594:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2618:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2618:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2573:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2573:20:3"
																		},
																		"nativeSrc": "2573:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2573:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2563:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2563:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2314:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2350:9:3",
														"nodeType": "YulTypedName",
														"src": "2350:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2361:7:3",
														"nodeType": "YulTypedName",
														"src": "2361:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2373:6:3",
														"nodeType": "YulTypedName",
														"src": "2373:6:3",
														"type": ""
													}
												],
												"src": "2314:329:3"
											},
											{
												"body": {
													"nativeSrc": "2708:50:3",
													"nodeType": "YulBlock",
													"src": "2708:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2725:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2725:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2745:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2745:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2730:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "2730:14:3"
																		},
																		"nativeSrc": "2730:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2730:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2718:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:3"
																},
																"nativeSrc": "2718:34:3",
																"nodeType": "YulFunctionCall",
																"src": "2718:34:3"
															},
															"nativeSrc": "2718:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "2718:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2649:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2696:5:3",
														"nodeType": "YulTypedName",
														"src": "2696:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2703:3:3",
														"nodeType": "YulTypedName",
														"src": "2703:3:3",
														"type": ""
													}
												],
												"src": "2649:109:3"
											},
											{
												"body": {
													"nativeSrc": "2856:118:3",
													"nodeType": "YulBlock",
													"src": "2856:118:3",
													"statements": [
														{
															"nativeSrc": "2866:26:3",
															"nodeType": "YulAssignment",
															"src": "2866:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2878:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2874:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:3"
																},
																"nativeSrc": "2874:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2874:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2866:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2940:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2940:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2953:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2964:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2964:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2949:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:3"
																		},
																		"nativeSrc": "2949:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2949:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2902:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "2902:37:3"
																},
																"nativeSrc": "2902:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2902:65:3"
															},
															"nativeSrc": "2902:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2902:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2764:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2828:9:3",
														"nodeType": "YulTypedName",
														"src": "2828:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2840:6:3",
														"nodeType": "YulTypedName",
														"src": "2840:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2851:4:3",
														"nodeType": "YulTypedName",
														"src": "2851:4:3",
														"type": ""
													}
												],
												"src": "2764:210:3"
											},
											{
												"body": {
													"nativeSrc": "3076:73:3",
													"nodeType": "YulBlock",
													"src": "3076:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3093:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3098:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3086:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:3"
																},
																"nativeSrc": "3086:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3086:19:3"
															},
															"nativeSrc": "3086:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3086:19:3"
														},
														{
															"nativeSrc": "3114:29:3",
															"nodeType": "YulAssignment",
															"src": "3114:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3133:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3133:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3138:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3138:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3129:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:3"
																},
																"nativeSrc": "3129:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3129:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3114:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3114:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2980:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3048:3:3",
														"nodeType": "YulTypedName",
														"src": "3048:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3053:6:3",
														"nodeType": "YulTypedName",
														"src": "3053:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3064:11:3",
														"nodeType": "YulTypedName",
														"src": "3064:11:3",
														"type": ""
													}
												],
												"src": "2980:169:3"
											},
											{
												"body": {
													"nativeSrc": "3261:123:3",
													"nodeType": "YulBlock",
													"src": "3261:123:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3283:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3283:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3291:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3291:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3279:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3279:3:3"
																		},
																		"nativeSrc": "3279:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3279:14:3"
																	},
																	{
																		"hexValue": "436f756e7465722063616e2062652075706461746564206f6e6c79207768656e",
																		"kind": "string",
																		"nativeSrc": "3295:34:3",
																		"nodeType": "YulLiteral",
																		"src": "3295:34:3",
																		"type": "",
																		"value": "Counter can be updated only when"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3272:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:3"
																},
																"nativeSrc": "3272:58:3",
																"nodeType": "YulFunctionCall",
																"src": "3272:58:3"
															},
															"nativeSrc": "3272:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "3272:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3351:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3351:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3359:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3359:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3347:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:3"
																		},
																		"nativeSrc": "3347:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3347:15:3"
																	},
																	{
																		"hexValue": "20616374697661746564",
																		"kind": "string",
																		"nativeSrc": "3364:12:3",
																		"nodeType": "YulLiteral",
																		"src": "3364:12:3",
																		"type": "",
																		"value": " activated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3340:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:3"
																},
																"nativeSrc": "3340:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3340:37:3"
															},
															"nativeSrc": "3340:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3340:37:3"
														}
													]
												},
												"name": "store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
												"nativeSrc": "3155:229:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3253:6:3",
														"nodeType": "YulTypedName",
														"src": "3253:6:3",
														"type": ""
													}
												],
												"src": "3155:229:3"
											},
											{
												"body": {
													"nativeSrc": "3536:220:3",
													"nodeType": "YulBlock",
													"src": "3536:220:3",
													"statements": [
														{
															"nativeSrc": "3546:74:3",
															"nodeType": "YulAssignment",
															"src": "3546:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3612:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3612:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3617:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3617:2:3",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3553:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3553:58:3"
																},
																"nativeSrc": "3553:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3553:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3546:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3546:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3718:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3718:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																	"nativeSrc": "3629:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3629:88:3"
																},
																"nativeSrc": "3629:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3629:93:3"
															},
															"nativeSrc": "3629:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3629:93:3"
														},
														{
															"nativeSrc": "3731:19:3",
															"nodeType": "YulAssignment",
															"src": "3731:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3742:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3742:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3738:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:3"
																},
																"nativeSrc": "3738:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3738:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3731:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3731:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3390:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3524:3:3",
														"nodeType": "YulTypedName",
														"src": "3524:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3532:3:3",
														"nodeType": "YulTypedName",
														"src": "3532:3:3",
														"type": ""
													}
												],
												"src": "3390:366:3"
											},
											{
												"body": {
													"nativeSrc": "3933:248:3",
													"nodeType": "YulBlock",
													"src": "3933:248:3",
													"statements": [
														{
															"nativeSrc": "3943:26:3",
															"nodeType": "YulAssignment",
															"src": "3943:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3955:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3955:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3966:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3966:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3951:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:3"
																},
																"nativeSrc": "3951:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3951:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3943:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3943:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3990:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3990:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4001:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4001:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3986:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:3"
																		},
																		"nativeSrc": "3986:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4009:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4009:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4015:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4005:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:3"
																		},
																		"nativeSrc": "4005:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3979:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:3"
																},
																"nativeSrc": "3979:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3979:47:3"
															},
															"nativeSrc": "3979:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3979:47:3"
														},
														{
															"nativeSrc": "4035:139:3",
															"nodeType": "YulAssignment",
															"src": "4035:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4169:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4169:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4043:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4043:124:3"
																},
																"nativeSrc": "4043:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4043:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4035:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4035:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3762:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3913:9:3",
														"nodeType": "YulTypedName",
														"src": "3913:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3928:4:3",
														"nodeType": "YulTypedName",
														"src": "3928:4:3",
														"type": ""
													}
												],
												"src": "3762:419:3"
											},
											{
												"body": {
													"nativeSrc": "4215:152:3",
													"nodeType": "YulBlock",
													"src": "4215:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4232:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4232:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4235:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4235:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4225:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:3"
																},
																"nativeSrc": "4225:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4225:88:3"
															},
															"nativeSrc": "4225:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4225:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4329:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4329:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4332:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4332:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4322:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:3"
																},
																"nativeSrc": "4322:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4322:15:3"
															},
															"nativeSrc": "4322:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4322:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4353:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4356:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4356:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4346:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:3"
																},
																"nativeSrc": "4346:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4346:15:3"
															},
															"nativeSrc": "4346:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4346:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4187:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4187:180:3"
											},
											{
												"body": {
													"nativeSrc": "4416:190:3",
													"nodeType": "YulBlock",
													"src": "4416:190:3",
													"statements": [
														{
															"nativeSrc": "4426:33:3",
															"nodeType": "YulAssignment",
															"src": "4426:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4453:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4453:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4435:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4435:17:3"
																},
																"nativeSrc": "4435:24:3",
																"nodeType": "YulFunctionCall",
																"src": "4435:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4426:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4426:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4549:22:3",
																"nodeType": "YulBlock",
																"src": "4549:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4551:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4551:16:3"
																			},
																			"nativeSrc": "4551:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4551:18:3"
																		},
																		"nativeSrc": "4551:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4551:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4474:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4474:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4481:66:3",
																		"nodeType": "YulLiteral",
																		"src": "4481:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4471:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4471:2:3"
																},
																"nativeSrc": "4471:77:3",
																"nodeType": "YulFunctionCall",
																"src": "4471:77:3"
															},
															"nativeSrc": "4468:103:3",
															"nodeType": "YulIf",
															"src": "4468:103:3"
														},
														{
															"nativeSrc": "4580:20:3",
															"nodeType": "YulAssignment",
															"src": "4580:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4591:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4591:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4598:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4598:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4587:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:3"
																},
																"nativeSrc": "4587:13:3",
																"nodeType": "YulFunctionCall",
																"src": "4587:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4580:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "4373:233:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4402:5:3",
														"nodeType": "YulTypedName",
														"src": "4402:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4412:3:3",
														"nodeType": "YulTypedName",
														"src": "4412:3:3",
														"type": ""
													}
												],
												"src": "4373:233:3"
											},
											{
												"body": {
													"nativeSrc": "4655:128:3",
													"nodeType": "YulBlock",
													"src": "4655:128:3",
													"statements": [
														{
															"nativeSrc": "4665:33:3",
															"nodeType": "YulAssignment",
															"src": "4665:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4692:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4692:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4674:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4674:17:3"
																},
																"nativeSrc": "4674:24:3",
																"nodeType": "YulFunctionCall",
																"src": "4674:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4665:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4726:22:3",
																"nodeType": "YulBlock",
																"src": "4726:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4728:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4728:16:3"
																			},
																			"nativeSrc": "4728:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4728:18:3"
																		},
																		"nativeSrc": "4728:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4728:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4713:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4713:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4720:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4720:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4710:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4710:2:3"
																},
																"nativeSrc": "4710:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4710:15:3"
															},
															"nativeSrc": "4707:41:3",
															"nodeType": "YulIf",
															"src": "4707:41:3"
														},
														{
															"nativeSrc": "4757:20:3",
															"nodeType": "YulAssignment",
															"src": "4757:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4768:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4768:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4775:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4775:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4764:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4764:3:3"
																},
																"nativeSrc": "4764:13:3",
																"nodeType": "YulFunctionCall",
																"src": "4764:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4757:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:3"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "4612:171:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4641:5:3",
														"nodeType": "YulTypedName",
														"src": "4641:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4651:3:3",
														"nodeType": "YulTypedName",
														"src": "4651:3:3",
														"type": ""
													}
												],
												"src": "4612:171:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter can be updated only when\")\n\n        mstore(add(memPtr, 32), \" activated\")\n\n    }\n\n    function abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063abd1b73d11610059578063abd1b73d146100ec578063e834cbb3146100f6578063f2fde38b14610100578063ffc959f71461011c57610086565b806306661abd1461008a57806368fcb1c1146100a8578063715018a6146100c45780638da5cb5b146100ce575b5f80fd5b61009261013a565b60405161009f9190610477565b60405180910390f35b6100c260048036038101906100bd91906104c9565b610140565b005b6100cc610164565b005b6100d6610177565b6040516100e39190610533565b60405180910390f35b6100f461019e565b005b6100fe61020c565b005b61011a60048036038101906101159190610576565b61027a565b005b6101246102fe565b60405161013191906105b0565b60405180910390f35b60015481565b610148610310565b8060025f6101000a81548160ff02191690831515021790555050565b61016c610310565b6101755f610397565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001151560025f9054906101000a900460ff161515146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90610649565b60405180910390fd5b60015f81548092919061020590610694565b9190505550565b6001151560025f9054906101000a900460ff16151514610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025890610649565b60405180910390fd5b60015f815480929190610273906106db565b9190505550565b610282610310565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102f2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102e99190610533565b60405180910390fd5b6102fb81610397565b50565b60025f9054906101000a900460ff1681565b610318610458565b73ffffffffffffffffffffffffffffffffffffffff16610336610177565b73ffffffffffffffffffffffffffffffffffffffff161461039557610359610458565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161038c9190610533565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6104718161045f565b82525050565b5f60208201905061048a5f830184610468565b92915050565b5f80fd5b5f8115159050919050565b6104a881610494565b81146104b2575f80fd5b50565b5f813590506104c38161049f565b92915050565b5f602082840312156104de576104dd610490565b5b5f6104eb848285016104b5565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051d826104f4565b9050919050565b61052d81610513565b82525050565b5f6020820190506105465f830184610524565b92915050565b61055581610513565b811461055f575f80fd5b50565b5f813590506105708161054c565b92915050565b5f6020828403121561058b5761058a610490565b5b5f61059884828501610562565b91505092915050565b6105aa81610494565b82525050565b5f6020820190506105c35f8301846105a1565b92915050565b5f82825260208201905092915050565b7f436f756e7465722063616e2062652075706461746564206f6e6c79207768656e5f8201527f2061637469766174656400000000000000000000000000000000000000000000602082015250565b5f610633602a836105c9565b915061063e826105d9565b604082019050919050565b5f6020820190508181035f83015261066081610627565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61069e8261045f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106d0576106cf610667565b5b600182019050919050565b5f6106e58261045f565b91505f82036106f7576106f6610667565b5b60018203905091905056fea26469706673582212205a71a3e8944b8e7cc138153454e96e2b1914d4bf96693409948d41da7083cf1a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABD1B73D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xE834CBB3 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFFC959F7 EQ PUSH2 0x11C JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x68FCB1C1 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x164 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x148 PUSH2 0x310 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x16C PUSH2 0x310 JUMP JUMPDEST PUSH2 0x175 PUSH0 PUSH2 0x397 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x205 SWAP1 PUSH2 0x694 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258 SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x273 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0x310 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB DUP2 PUSH2 0x397 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x318 PUSH2 0x458 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x336 PUSH2 0x177 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x395 JUMPI PUSH2 0x359 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x45F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48A PUSH0 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A8 DUP2 PUSH2 0x494 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4C3 DUP2 PUSH2 0x49F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x490 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4EB DUP5 DUP3 DUP6 ADD PUSH2 0x4B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51D DUP3 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D DUP2 PUSH2 0x513 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x546 PUSH0 DUP4 ADD DUP5 PUSH2 0x524 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0x513 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x54C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58B JUMPI PUSH2 0x58A PUSH2 0x490 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x598 DUP5 DUP3 DUP6 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0x494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722063616E2062652075706461746564206F6E6C79207768656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2061637469766174656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x633 PUSH1 0x2A DUP4 PUSH2 0x5C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x63E DUP3 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x660 DUP2 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x69E DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x6D0 JUMPI PUSH2 0x6CF PUSH2 0x667 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6E5 DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x6F7 JUMPI PUSH2 0x6F6 PUSH2 0x667 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS PUSH18 0xA3E8944B8E7CC138153454E96E2B1914D4BF SWAP7 PUSH10 0x3409948D41DA7083CF1A PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "150:758:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;232:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:80:2;;;:::i;:::-;;825;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;260:35:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;232:21;;;;:::o;554:126::-;1531:13:0;:11;:13::i;:::-;655:17:2::1;636:16;;:36;;;;;;;;;;;;;;;;;;554:126:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;737:80:2:-;424:4;404:24;;:16;;;;;;;;;;;:24;;;396:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;802:5:::1;;:7;;;;;;;;;:::i;:::-;;;;;;737:80::o:0;825:::-;424:4;404:24;;:16;;;;;;;;;;;:24;;;396:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;890:5:::1;;:7;;;;;;;;;:::i;:::-;;;;;;825:80::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;260:35:2:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:90;803:7;846:5;839:13;832:21;821:32;;769:90;;;:::o;865:116::-;935:21;950:5;935:21;:::i;:::-;928:5;925:32;915:60;;971:1;968;961:12;915:60;865:116;:::o;987:133::-;1030:5;1068:6;1055:20;1046:29;;1084:30;1108:5;1084:30;:::i;:::-;987:133;;;;:::o;1126:323::-;1182:6;1231:2;1219:9;1210:7;1206:23;1202:32;1199:119;;;1237:79;;:::i;:::-;1199:119;1357:1;1382:50;1424:7;1415:6;1404:9;1400:22;1382:50;:::i;:::-;1372:60;;1328:114;1126:323;;;;:::o;1455:126::-;1492:7;1532:42;1525:5;1521:54;1510:65;;1455:126;;;:::o;1587:96::-;1624:7;1653:24;1671:5;1653:24;:::i;:::-;1642:35;;1587:96;;;:::o;1689:118::-;1776:24;1794:5;1776:24;:::i;:::-;1771:3;1764:37;1689:118;;:::o;1813:222::-;1906:4;1944:2;1933:9;1929:18;1921:26;;1957:71;2025:1;2014:9;2010:17;2001:6;1957:71;:::i;:::-;1813:222;;;;:::o;2041:122::-;2114:24;2132:5;2114:24;:::i;:::-;2107:5;2104:35;2094:63;;2153:1;2150;2143:12;2094:63;2041:122;:::o;2169:139::-;2215:5;2253:6;2240:20;2231:29;;2269:33;2296:5;2269:33;:::i;:::-;2169:139;;;;:::o;2314:329::-;2373:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:119;;;2428:79;;:::i;:::-;2390:119;2548:1;2573:53;2618:7;2609:6;2598:9;2594:22;2573:53;:::i;:::-;2563:63;;2519:117;2314:329;;;;:::o;2649:109::-;2730:21;2745:5;2730:21;:::i;:::-;2725:3;2718:34;2649:109;;:::o;2764:210::-;2851:4;2889:2;2878:9;2874:18;2866:26;;2902:65;2964:1;2953:9;2949:17;2940:6;2902:65;:::i;:::-;2764:210;;;;:::o;2980:169::-;3064:11;3098:6;3093:3;3086:19;3138:4;3133:3;3129:14;3114:29;;2980:169;;;;:::o;3155:229::-;3295:34;3291:1;3283:6;3279:14;3272:58;3364:12;3359:2;3351:6;3347:15;3340:37;3155:229;:::o;3390:366::-;3532:3;3553:67;3617:2;3612:3;3553:67;:::i;:::-;3546:74;;3629:93;3718:3;3629:93;:::i;:::-;3747:2;3742:3;3738:12;3731:19;;3390:366;;;:::o;3762:419::-;3928:4;3966:2;3955:9;3951:18;3943:26;;4015:9;4009:4;4005:20;4001:1;3990:9;3986:17;3979:47;4043:131;4169:4;4043:131;:::i;:::-;4035:139;;3762:419;;;:::o;4187:180::-;4235:77;4232:1;4225:88;4332:4;4329:1;4322:15;4356:4;4353:1;4346:15;4373:233;4412:3;4435:24;4453:5;4435:24;:::i;:::-;4426:33;;4481:66;4474:5;4471:77;4468:103;;4551:18;;:::i;:::-;4468:103;4598:1;4591:5;4587:13;4580:20;;4373:233;;;:::o;4612:171::-;4651:3;4674:24;4692:5;4674:24;:::i;:::-;4665:33;;4720:4;4713:5;4710:15;4707:41;;4728:18;;:::i;:::-;4707:41;4775:1;4768:5;4764:13;4757:20;;4612:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "369600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"count()": "2426",
								"counterActivated()": "2532",
								"decreaseCount()": "26688",
								"increaseCount()": "26667",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"setCounterActivated(bool)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 253,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 253,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 291,
									"end": 295,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 295,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 260,
									"end": 295,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 295,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 260,
									"end": 295,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 260,
									"end": 295,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 260,
									"end": 295,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 186,
									"end": 196,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 150,
									"end": 908,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 150,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 908,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a71a3e8944b8e7cc138153454e96e2b1914d4bf96693409948d41da7083cf1a64736f6c63430008190033",
									".code": [
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "ABD1B73D"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "ABD1B73D"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "E834CBB3"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "FFC959F7"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "6661ABD"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "68FCB1C1"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 908,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 232,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 554,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 554,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 737,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 737,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 737,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 737,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 737,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 817,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 825,
											"end": 905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 825,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 825,
											"end": 905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 260,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 253,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 232,
											"end": 253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 554,
											"end": 680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 636,
											"end": 672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 737,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 396,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 802,
											"end": 807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 802,
											"end": 809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 802,
											"end": 809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 404,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 404,
											"end": 420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 404,
											"end": 428,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 396,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 475,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 396,
											"end": 475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 890,
											"end": 895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 890,
											"end": 897,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 890,
											"end": 897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 260,
											"end": 295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 260,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 859,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 769,
											"end": 859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 803,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 852,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 832,
											"end": 853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 821,
											"end": 853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 821,
											"end": 853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 769,
											"end": 859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 769,
											"end": 859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 865,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 865,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 928,
											"end": 933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 925,
											"end": 957,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 915,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 915,
											"end": 975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 915,
											"end": 975,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 915,
											"end": 975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 865,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 865,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1075,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1084,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1318,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1199,
											"end": 1318,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1237,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1237,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1316,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1237,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1318,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1199,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1424,
											"end": 1431,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1382,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1442,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1581,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1455,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1574,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1525,
											"end": 1530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1575,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1683,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1587,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1671,
											"end": 1676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1653,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1807,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1689,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1776,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2007,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1957,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2028,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1957,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2041,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2114,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2114,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2139,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2094,
											"end": 2157,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2157,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2094,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2260,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2269,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2302,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2269,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2390,
											"end": 2509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2428,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2428,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2507,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2428,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2509,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2390,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2573,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2626,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2573,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2649,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2745,
											"end": 2750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2730,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2751,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2730,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2902,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2902,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3142,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3384,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3155,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3329,
											"name": "PUSH",
											"source": 3,
											"value": "436F756E7465722063616E2062652075706461746564206F6E6C79207768656E"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3293,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "PUSH",
											"source": 3,
											"value": "2061637469766174656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3377,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3756,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3390,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3617,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3612,
											"end": 3615,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3553,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3553,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3546,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3629,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3722,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3629,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 4181,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3762,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 3932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 3969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4005,
											"end": 4025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3999,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4043,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4043,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4035,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 4181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 4181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 4181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 4181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4187,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4187,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4322,
											"end": 4337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4361,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4606,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4373,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4435,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4459,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4435,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4547,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4474,
											"end": 4479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4468,
											"end": 4571,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4551,
											"end": 4569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4571,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4468,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4599,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4591,
											"end": 4596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4783,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4612,
											"end": 4783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4674,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4698,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4674,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4698,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 4724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4710,
											"end": 4725,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4707,
											"end": 4748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4728,
											"end": 4746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4748,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4707,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4768,
											"end": 4773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4783,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Counter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"counterActivated()": "ffc959f7",
							"decreaseCount()": "e834cbb3",
							"increaseCount()": "abd1b73d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCounterActivated(bool)": "68fcb1c1",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counterActivated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreaseCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_counterActivated\",\"type\":\"bool\"}],\"name\":\"setCounterActivated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"CounterContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Counter.sol\":{\"keccak256\":\"0xdffb12eafae8a085ee6d26ea85e24631cc9785042bc84fa74cb5643b0b7212b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://725c946e00c8894ea4de69773c4e9c37e5b624b72c1aaa9d0d36b5cf3b85eb1c\",\"dweb:/ipfs/QmZgU6kKWsai8UDmGbmY1s2otDtTVri4rzt5T7cVyvit8n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 187,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "count",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 190,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "counterActivated",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/Counter.sol": {
				"ast": {
					"absolutePath": "contracts/Counter.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"CounterContract": [
							232
						],
						"Ownable": [
							147
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 233,
							"sourceUnit": 148,
							"src": "94:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 182,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "186:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 183,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "190:6:2",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "186:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"178:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "178:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "178:19:2"
								}
							],
							"canonicalName": "CounterContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 232,
							"linearizedBaseContracts": [
								232,
								147,
								177
							],
							"name": "CounterContract",
							"nameLocation": "159:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 187,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "244:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 232,
									"src": "232:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 185,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "232:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 186,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ffc959f7",
									"id": 190,
									"mutability": "mutable",
									"name": "counterActivated",
									"nameLocation": "272:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 232,
									"src": "260:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 188,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "260:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "291:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "385:110:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 193,
																"name": "counterActivated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "404:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "424:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "404:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465722063616e2062652075706461746564206f6e6c79207768656e20616374697661746564",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																"typeString": "literal_string \"Counter can be updated only when activated\""
															},
															"value": "Counter can be updated only when activated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																"typeString": "literal_string \"Counter can be updated only when activated\""
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "396:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "396:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "396:79:2"
											},
											{
												"id": 199,
												"nodeType": "PlaceholderStatement",
												"src": "486:1:2"
											}
										]
									},
									"id": 201,
									"name": "onlyCounterActivated",
									"nameLocation": "365:20:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:0:2"
									},
									"src": "356:139:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "625:55:2",
										"statements": [
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "counterActivated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "636:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "_counterActivated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "655:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "636:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "636:36:2"
											}
										]
									},
									"functionSelector": "68fcb1c1",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 205,
												"name": "onlyOwner",
												"nameLocations": [
													"616:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "616:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "616:9:2"
										}
									],
									"name": "setCounterActivated",
									"nameLocation": "563:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_counterActivated",
												"nameLocation": "588:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "583:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:24:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:0:2"
									},
									"scope": 232,
									"src": "554:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "791:26:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "802:7:2",
													"subExpression": {
														"id": 218,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "802:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "802:7:2"
											}
										]
									},
									"functionSelector": "abd1b73d",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 215,
												"name": "onlyCounterActivated",
												"nameLocations": [
													"771:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 201,
												"src": "771:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "771:20:2"
										}
									],
									"name": "increaseCount",
									"nameLocation": "746:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:2"
									},
									"scope": 232,
									"src": "737:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "879:26:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "890:7:2",
													"subExpression": {
														"id": 227,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "890:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "890:7:2"
											}
										]
									},
									"functionSelector": "e834cbb3",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "onlyCounterActivated",
												"nameLocations": [
													"859:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 201,
												"src": "859:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "859:20:2"
										}
									],
									"name": "decreaseCount",
									"nameLocation": "834:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:2"
									},
									"scope": 232,
									"src": "825:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "150:758:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:875:2"
				},
				"id": 2
			}
		}
	}
}