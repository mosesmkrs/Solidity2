{
	"id": "6a2b607753c149a4e7fdcbdb1561fe4f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Conditions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\n// IMPORTING LIBRARIES\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\n\r\ncontract ConditionsContract{\r\n    // DECLARING LIBRARIES\r\n    using  Math for uint8;\r\n\r\n    // DECLARING VARIABLES\r\n    uint8 public currentCounter = 0;\r\n    string private _secretMessage = \"You cracked the code\";\r\n\r\n    // A FUNCTION TO GET THE SECRET\r\n    function getSecret() external view returns(string memory){\r\n        require(currentCounter > 10 && currentCounter < 20, \"Counter should be between 10 and 20\");\r\n        return _secretMessage;\r\n    }\r\n\r\n    // A FUNCTION TO UPDATE THE COUNTER\r\n    function updateCounter() external{\r\n        (bool mathStatus, uint answer) = currentCounter.tryAdd(1);\r\n\r\n        if(!mathStatus){\r\n            return;\r\n        }\r\n\r\n        currentCounter = uint8(answer);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Conditions.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Conditions.sol": {
				"ConditionsContract": {
					"abi": [
						{
							"inputs": [],
							"name": "currentCounter",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSecret",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCounter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Conditions.sol\":142:862  contract ConditionsContract{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Conditions.sol\":292:293  0 */\n  0x00\n    /* \"contracts/Conditions.sol\":262:293  uint8 public currentCounter = 0 */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Conditions.sol\":300:354  string private _secretMessage = \"You cracked the code\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x14\n  dup2\n  mstore\n  0x20\n  add\n  0x596f7520637261636b65642074686520636f6465000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/Conditions.sol\":142:862  contract ConditionsContract{... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\n    /* \"#utility.yul\":7:106   */\ntag_5:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_6:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_7:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_8:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_30:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_32\n  tag_7\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":714:798   */\ntag_31:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_9:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_10:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_11:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_12:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_37\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_11\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1429:1468   */\n  tag_38\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_11\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_13:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_14:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_15:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_42\n    /* \"#utility.yul\":1818:1852   */\n  tag_43\n    /* \"#utility.yul\":1827:1851   */\n  tag_44\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_13\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1818:1852   */\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1800:1853   */\n  tag_13\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_16:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_17:\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2117:2208   */\n  tag_48\n    /* \"#utility.yul\":2166:2207   */\n  tag_49\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_12\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_18:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_19:\n    /* \"#utility.yul\":2377:2409   */\n  tag_52\n  tag_18\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2418:2483   */\n  tag_53\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_20:\n    /* \"#utility.yul\":2555:2675   */\ntag_55:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_58\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_21:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_61\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_9\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2906:2935   */\n  tag_62\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_63:\n    /* \"#utility.yul\":3133:3213   */\n  tag_64\n    /* \"#utility.yul\":3189:3211   */\n  tag_65\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_10\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_20\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_60:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_22:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_23:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_68\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_24:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_70\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_72\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_5\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_74\n  tag_6\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":4038:4094   */\ntag_73:\n    /* \"#utility.yul\":4118:4156   */\n  tag_75\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4203:4270   */\n  tag_76\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_21\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_79:\n    /* \"#utility.yul\":5144:5211   */\n  tag_80\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_24\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_77)\n    /* \"#utility.yul\":4365:4983   */\ntag_78:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_81\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_9\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_82:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_86\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_23\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_85:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_77:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Conditions.sol\":142:862  contract ConditionsContract{... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Conditions.sol\":142:862  contract ConditionsContract{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1687fe8e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5763440b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5b9fdc30\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Conditions.sol\":647:859  function updateCounter() external{... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Conditions.sol\":262:293  uint8 public currentCounter = 0 */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Conditions.sol\":400:598  function getSecret() external view returns(string memory){... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Conditions.sol\":647:859  function updateCounter() external{... */\n    tag_7:\n        /* \"contracts/Conditions.sol\":692:707  bool mathStatus */\n      0x00\n        /* \"contracts/Conditions.sol\":709:720  uint answer */\n      dup1\n        /* \"contracts/Conditions.sol\":724:748  currentCounter.tryAdd(1) */\n      tag_17\n        /* \"contracts/Conditions.sol\":746:747  1 */\n      0x01\n        /* \"contracts/Conditions.sol\":724:738  currentCounter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditions.sol\":724:745  currentCounter.tryAdd */\n      0xff\n      and\n      tag_18\n      swap1\n        /* \"contracts/Conditions.sol\":724:748  currentCounter.tryAdd(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_17:\n        /* \"contracts/Conditions.sol\":691:748  (bool mathStatus, uint answer) = currentCounter.tryAdd(1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Conditions.sol\":765:775  mathStatus */\n      dup2\n        /* \"contracts/Conditions.sol\":761:809  if(!mathStatus){... */\n      tag_19\n      jumpi\n        /* \"contracts/Conditions.sol\":791:798  return; */\n      pop\n      pop\n      jump(tag_16)\n        /* \"contracts/Conditions.sol\":761:809  if(!mathStatus){... */\n    tag_19:\n        /* \"contracts/Conditions.sol\":844:850  answer */\n      dup1\n        /* \"contracts/Conditions.sol\":821:835  currentCounter */\n      0x00\n      dup1\n        /* \"contracts/Conditions.sol\":821:851  currentCounter = uint8(answer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Conditions.sol\":680:859  {... */\n      pop\n      pop\n        /* \"contracts/Conditions.sol\":647:859  function updateCounter() external{... */\n    tag_16:\n      jump\t// out\n        /* \"contracts/Conditions.sol\":262:293  uint8 public currentCounter = 0 */\n    tag_9:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Conditions.sol\":400:598  function getSecret() external view returns(string memory){... */\n    tag_13:\n        /* \"contracts/Conditions.sol\":443:456  string memory */\n      0x60\n        /* \"contracts/Conditions.sol\":493:495  10 */\n      0x0a\n        /* \"contracts/Conditions.sol\":476:490  currentCounter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditions.sol\":476:495  currentCounter > 10 */\n      0xff\n      and\n      gt\n        /* \"contracts/Conditions.sol\":476:518  currentCounter > 10 && currentCounter < 20 */\n      dup1\n      iszero\n      tag_21\n      jumpi\n      pop\n        /* \"contracts/Conditions.sol\":516:518  20 */\n      0x14\n        /* \"contracts/Conditions.sol\":499:513  currentCounter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditions.sol\":499:518  currentCounter < 20 */\n      0xff\n      and\n      lt\n        /* \"contracts/Conditions.sol\":476:518  currentCounter > 10 && currentCounter < 20 */\n    tag_21:\n        /* \"contracts/Conditions.sol\":468:558  require(currentCounter > 10 && currentCounter < 20, \"Counter should be between 10 and 20\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/Conditions.sol\":576:590  _secretMessage */\n      0x01\n        /* \"contracts/Conditions.sol\":569:590  return _secretMessage */\n      dup1\n      sload\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_27\n      swap1\n      tag_26\n      jump\t// in\n    tag_27:\n      dup1\n      iszero\n      tag_28\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_29\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_28)\n    tag_29:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_30:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_30\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Conditions.sol\":400:598  function getSecret() external view returns(string memory){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":585:801  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:650  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":652:659  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":695:704  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":711:712  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":707:708  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":707:712  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":695:712  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":734:735  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":730:731  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":730:735  c < a */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":726:754  if (c < a) return (false, 0) */\n      iszero\n      tag_32\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":745:750  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":752:753  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":737:754  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_31)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":726:754  if (c < a) return (false, 0) */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":776:780  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":782:783  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":768:784  return (true, c) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":585:801  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_31:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:93   */\n    tag_33:\n        /* \"#utility.yul\":42:49   */\n      0x00\n        /* \"#utility.yul\":82:86   */\n      0xff\n        /* \"#utility.yul\":75:80   */\n      dup3\n        /* \"#utility.yul\":71:87   */\n      and\n        /* \"#utility.yul\":60:87   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:93   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":99:211   */\n    tag_34:\n        /* \"#utility.yul\":182:204   */\n      tag_46\n        /* \"#utility.yul\":198:203   */\n      dup2\n        /* \"#utility.yul\":182:204   */\n      tag_33\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":177:180   */\n      dup3\n        /* \"#utility.yul\":170:205   */\n      mstore\n        /* \"#utility.yul\":99:211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":217:431   */\n    tag_11:\n        /* \"#utility.yul\":306:310   */\n      0x00\n        /* \"#utility.yul\":344:346   */\n      0x20\n        /* \"#utility.yul\":333:342   */\n      dup3\n        /* \"#utility.yul\":329:347   */\n      add\n        /* \"#utility.yul\":321:347   */\n      swap1\n      pop\n        /* \"#utility.yul\":357:424   */\n      tag_48\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":406:423   */\n      add\n        /* \"#utility.yul\":397:403   */\n      dup5\n        /* \"#utility.yul\":357:424   */\n      tag_34\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":217:431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:536   */\n    tag_35:\n        /* \"#utility.yul\":489:495   */\n      0x00\n        /* \"#utility.yul\":523:528   */\n      dup2\n        /* \"#utility.yul\":517:529   */\n      mload\n        /* \"#utility.yul\":507:529   */\n      swap1\n      pop\n        /* \"#utility.yul\":437:536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:711   */\n    tag_36:\n        /* \"#utility.yul\":626:637   */\n      0x00\n        /* \"#utility.yul\":660:666   */\n      dup3\n        /* \"#utility.yul\":655:658   */\n      dup3\n        /* \"#utility.yul\":648:667   */\n      mstore\n        /* \"#utility.yul\":700:704   */\n      0x20\n        /* \"#utility.yul\":695:698   */\n      dup3\n        /* \"#utility.yul\":691:705   */\n      add\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":542:711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":717:856   */\n    tag_37:\n        /* \"#utility.yul\":806:812   */\n      dup3\n        /* \"#utility.yul\":801:804   */\n      dup2\n        /* \"#utility.yul\":796:799   */\n      dup4\n        /* \"#utility.yul\":790:813   */\n      mcopy\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":838:844   */\n      dup4\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":829:845   */\n      add\n        /* \"#utility.yul\":822:849   */\n      mstore\n        /* \"#utility.yul\":717:856   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":862:964   */\n    tag_38:\n        /* \"#utility.yul\":903:909   */\n      0x00\n        /* \"#utility.yul\":954:956   */\n      0x1f\n        /* \"#utility.yul\":950:957   */\n      not\n        /* \"#utility.yul\":945:947   */\n      0x1f\n        /* \"#utility.yul\":938:943   */\n      dup4\n        /* \"#utility.yul\":934:948   */\n      add\n        /* \"#utility.yul\":930:958   */\n      and\n        /* \"#utility.yul\":920:958   */\n      swap1\n      pop\n        /* \"#utility.yul\":862:964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":970:1347   */\n    tag_39:\n        /* \"#utility.yul\":1058:1061   */\n      0x00\n        /* \"#utility.yul\":1086:1125   */\n      tag_54\n        /* \"#utility.yul\":1119:1124   */\n      dup3\n        /* \"#utility.yul\":1086:1125   */\n      tag_35\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1141:1212   */\n      tag_55\n        /* \"#utility.yul\":1205:1211   */\n      dup2\n        /* \"#utility.yul\":1200:1203   */\n      dup6\n        /* \"#utility.yul\":1141:1212   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1134:1212   */\n      swap4\n      pop\n        /* \"#utility.yul\":1221:1286   */\n      tag_56\n        /* \"#utility.yul\":1279:1285   */\n      dup2\n        /* \"#utility.yul\":1274:1277   */\n      dup6\n        /* \"#utility.yul\":1267:1271   */\n      0x20\n        /* \"#utility.yul\":1260:1265   */\n      dup7\n        /* \"#utility.yul\":1256:1272   */\n      add\n        /* \"#utility.yul\":1221:1286   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1311:1340   */\n      tag_57\n        /* \"#utility.yul\":1333:1339   */\n      dup2\n        /* \"#utility.yul\":1311:1340   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1306:1309   */\n      dup5\n        /* \"#utility.yul\":1302:1341   */\n      add\n        /* \"#utility.yul\":1295:1341   */\n      swap2\n      pop\n        /* \"#utility.yul\":1062:1347   */\n      pop\n        /* \"#utility.yul\":970:1347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1666   */\n    tag_15:\n        /* \"#utility.yul\":1466:1470   */\n      0x00\n        /* \"#utility.yul\":1504:1506   */\n      0x20\n        /* \"#utility.yul\":1493:1502   */\n      dup3\n        /* \"#utility.yul\":1489:1507   */\n      add\n        /* \"#utility.yul\":1481:1507   */\n      swap1\n      pop\n        /* \"#utility.yul\":1553:1562   */\n      dup2\n        /* \"#utility.yul\":1547:1551   */\n      dup2\n        /* \"#utility.yul\":1543:1563   */\n      sub\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1528:1537   */\n      dup4\n        /* \"#utility.yul\":1524:1541   */\n      add\n        /* \"#utility.yul\":1517:1564   */\n      mstore\n        /* \"#utility.yul\":1581:1659   */\n      tag_59\n        /* \"#utility.yul\":1654:1658   */\n      dup2\n        /* \"#utility.yul\":1645:1651   */\n      dup5\n        /* \"#utility.yul\":1581:1659   */\n      tag_39\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1573:1659   */\n      swap1\n      pop\n        /* \"#utility.yul\":1353:1666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1672:1894   */\n    tag_40:\n        /* \"#utility.yul\":1812:1846   */\n      0x436f756e7465722073686f756c64206265206265747765656e20313020616e64\n        /* \"#utility.yul\":1808:1809   */\n      0x00\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1796:1810   */\n      add\n        /* \"#utility.yul\":1789:1847   */\n      mstore\n        /* \"#utility.yul\":1881:1886   */\n      0x2032300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1876:1878   */\n      0x20\n        /* \"#utility.yul\":1868:1874   */\n      dup3\n        /* \"#utility.yul\":1864:1879   */\n      add\n        /* \"#utility.yul\":1857:1887   */\n      mstore\n        /* \"#utility.yul\":1672:1894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1900:2266   */\n    tag_41:\n        /* \"#utility.yul\":2042:2045   */\n      0x00\n        /* \"#utility.yul\":2063:2130   */\n      tag_62\n        /* \"#utility.yul\":2127:2129   */\n      0x23\n        /* \"#utility.yul\":2122:2125   */\n      dup4\n        /* \"#utility.yul\":2063:2130   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2056:2130   */\n      swap2\n      pop\n        /* \"#utility.yul\":2139:2232   */\n      tag_63\n        /* \"#utility.yul\":2228:2231   */\n      dup3\n        /* \"#utility.yul\":2139:2232   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2257:2259   */\n      0x40\n        /* \"#utility.yul\":2252:2255   */\n      dup3\n        /* \"#utility.yul\":2248:2260   */\n      add\n        /* \"#utility.yul\":2241:2260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1900:2266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2691   */\n    tag_24:\n        /* \"#utility.yul\":2438:2442   */\n      0x00\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2465:2474   */\n      dup3\n        /* \"#utility.yul\":2461:2479   */\n      add\n        /* \"#utility.yul\":2453:2479   */\n      swap1\n      pop\n        /* \"#utility.yul\":2525:2534   */\n      dup2\n        /* \"#utility.yul\":2519:2523   */\n      dup2\n        /* \"#utility.yul\":2515:2535   */\n      sub\n        /* \"#utility.yul\":2511:2512   */\n      0x00\n        /* \"#utility.yul\":2500:2509   */\n      dup4\n        /* \"#utility.yul\":2496:2513   */\n      add\n        /* \"#utility.yul\":2489:2536   */\n      mstore\n        /* \"#utility.yul\":2553:2684   */\n      tag_65\n        /* \"#utility.yul\":2679:2683   */\n      dup2\n        /* \"#utility.yul\":2553:2684   */\n      tag_41\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2545:2684   */\n      swap1\n      pop\n        /* \"#utility.yul\":2272:2691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2697:2877   */\n    tag_42:\n        /* \"#utility.yul\":2745:2822   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2742:2743   */\n      0x00\n        /* \"#utility.yul\":2735:2823   */\n      mstore\n        /* \"#utility.yul\":2842:2846   */\n      0x22\n        /* \"#utility.yul\":2839:2840   */\n      0x04\n        /* \"#utility.yul\":2832:2847   */\n      mstore\n        /* \"#utility.yul\":2866:2870   */\n      0x24\n        /* \"#utility.yul\":2863:2864   */\n      0x00\n        /* \"#utility.yul\":2856:2871   */\n      revert\n        /* \"#utility.yul\":2883:3203   */\n    tag_26:\n        /* \"#utility.yul\":2927:2933   */\n      0x00\n        /* \"#utility.yul\":2964:2965   */\n      0x02\n        /* \"#utility.yul\":2958:2962   */\n      dup3\n        /* \"#utility.yul\":2954:2966   */\n      div\n        /* \"#utility.yul\":2944:2966   */\n      swap1\n      pop\n        /* \"#utility.yul\":3011:3012   */\n      0x01\n        /* \"#utility.yul\":3005:3009   */\n      dup3\n        /* \"#utility.yul\":3001:3013   */\n      and\n        /* \"#utility.yul\":3032:3050   */\n      dup1\n        /* \"#utility.yul\":3022:3103   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":3088:3092   */\n      0x7f\n        /* \"#utility.yul\":3080:3086   */\n      dup3\n        /* \"#utility.yul\":3076:3093   */\n      and\n        /* \"#utility.yul\":3066:3093   */\n      swap2\n      pop\n        /* \"#utility.yul\":3022:3103   */\n    tag_68:\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3142:3148   */\n      dup3\n        /* \"#utility.yul\":3139:3153   */\n      lt\n        /* \"#utility.yul\":3119:3137   */\n      dup2\n        /* \"#utility.yul\":3116:3154   */\n      sub\n        /* \"#utility.yul\":3113:3197   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3169:3187   */\n      tag_70\n      tag_42\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3113:3197   */\n    tag_69:\n        /* \"#utility.yul\":2934:3203   */\n      pop\n        /* \"#utility.yul\":2883:3203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220169e3f9f9fd09f2ee98c0393c3200341d6a69457f49b161f4afb38fdff724dbe64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"array_dataslot_t_string_storage": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:2",
										"nodeType": "YulBlock",
										"src": "0:5231:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:2",
													"nodeType": "YulBlock",
													"src": "66:40:2",
													"statements": [
														{
															"nativeSrc": "77:22:2",
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:2"
																},
																"nativeSrc": "87:12:2",
																"nodeType": "YulFunctionCall",
																"src": "87:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:2",
														"nodeType": "YulTypedName",
														"src": "49:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:2",
														"nodeType": "YulTypedName",
														"src": "59:6:2",
														"type": ""
													}
												],
												"src": "7:99:2"
											},
											{
												"body": {
													"nativeSrc": "140:152:2",
													"nodeType": "YulBlock",
													"src": "140:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:2",
																		"nodeType": "YulLiteral",
																		"src": "157:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:2",
																		"nodeType": "YulLiteral",
																		"src": "160:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:2"
																},
																"nativeSrc": "150:88:2",
																"nodeType": "YulFunctionCall",
																"src": "150:88:2"
															},
															"nativeSrc": "150:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:2",
																		"nodeType": "YulLiteral",
																		"src": "254:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:2",
																		"nodeType": "YulLiteral",
																		"src": "257:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:2"
																},
																"nativeSrc": "247:15:2",
																"nodeType": "YulFunctionCall",
																"src": "247:15:2"
															},
															"nativeSrc": "247:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:2",
																		"nodeType": "YulLiteral",
																		"src": "278:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:2",
																		"nodeType": "YulLiteral",
																		"src": "281:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:2"
																},
																"nativeSrc": "271:15:2",
																"nodeType": "YulFunctionCall",
																"src": "271:15:2"
															},
															"nativeSrc": "271:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:2"
											},
											{
												"body": {
													"nativeSrc": "326:152:2",
													"nodeType": "YulBlock",
													"src": "326:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:2",
																		"nodeType": "YulLiteral",
																		"src": "343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:2",
																		"nodeType": "YulLiteral",
																		"src": "346:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:2"
																},
																"nativeSrc": "336:88:2",
																"nodeType": "YulFunctionCall",
																"src": "336:88:2"
															},
															"nativeSrc": "336:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:2",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:2",
																		"nodeType": "YulLiteral",
																		"src": "443:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nativeSrc": "433:15:2",
																"nodeType": "YulFunctionCall",
																"src": "433:15:2"
															},
															"nativeSrc": "433:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:2",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:2",
																		"nodeType": "YulLiteral",
																		"src": "467:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:2"
																},
																"nativeSrc": "457:15:2",
																"nodeType": "YulFunctionCall",
																"src": "457:15:2"
															},
															"nativeSrc": "457:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:2"
											},
											{
												"body": {
													"nativeSrc": "535:269:2",
													"nodeType": "YulBlock",
													"src": "535:269:2",
													"statements": [
														{
															"nativeSrc": "545:22:2",
															"nodeType": "YulAssignment",
															"src": "545:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:2",
																		"nodeType": "YulLiteral",
																		"src": "565:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:2"
																},
																"nativeSrc": "555:12:2",
																"nodeType": "YulFunctionCall",
																"src": "555:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:2"
																}
															]
														},
														{
															"nativeSrc": "576:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:2",
																		"nodeType": "YulLiteral",
																		"src": "612:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:2"
																},
																"nativeSrc": "602:12:2",
																"nodeType": "YulFunctionCall",
																"src": "602:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:2",
																	"nodeType": "YulTypedName",
																	"src": "580:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:2",
																"nodeType": "YulBlock",
																"src": "653:51:2",
																"statements": [
																	{
																		"nativeSrc": "667:27:2",
																		"nodeType": "YulAssignment",
																		"src": "667:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:2",
																					"nodeType": "YulLiteral",
																					"src": "689:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:2"
																			},
																			"nativeSrc": "677:17:2",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:2"
																},
																"nativeSrc": "626:26:2",
																"nodeType": "YulFunctionCall",
																"src": "626:26:2"
															},
															"nativeSrc": "623:81:2",
															"nodeType": "YulIf",
															"src": "623:81:2"
														},
														{
															"body": {
																"nativeSrc": "756:42:2",
																"nodeType": "YulBlock",
																"src": "756:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:2"
																			},
																			"nativeSrc": "770:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:2"
																		},
																		"nativeSrc": "770:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:2",
																				"nodeType": "YulLiteral",
																				"src": "751:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:2"
																		},
																		"nativeSrc": "740:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:2"
																},
																"nativeSrc": "717:38:2",
																"nodeType": "YulFunctionCall",
																"src": "717:38:2"
															},
															"nativeSrc": "714:84:2",
															"nodeType": "YulIf",
															"src": "714:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:2",
														"nodeType": "YulTypedName",
														"src": "519:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:2",
														"nodeType": "YulTypedName",
														"src": "528:6:2",
														"type": ""
													}
												],
												"src": "484:320:2"
											},
											{
												"body": {
													"nativeSrc": "864:87:2",
													"nodeType": "YulBlock",
													"src": "864:87:2",
													"statements": [
														{
															"nativeSrc": "874:11:2",
															"nodeType": "YulAssignment",
															"src": "874:11:2",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:2",
																"nodeType": "YulIdentifier",
																"src": "882:3:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:2",
																		"nodeType": "YulLiteral",
																		"src": "902:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:2"
																},
																"nativeSrc": "895:14:2",
																"nodeType": "YulFunctionCall",
																"src": "895:14:2"
															},
															"nativeSrc": "895:14:2",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:2"
														},
														{
															"nativeSrc": "918:26:2",
															"nodeType": "YulAssignment",
															"src": "918:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:2",
																		"nodeType": "YulLiteral",
																		"src": "936:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:2",
																		"nodeType": "YulLiteral",
																		"src": "939:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:2"
																},
																"nativeSrc": "926:18:2",
																"nodeType": "YulFunctionCall",
																"src": "926:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:2",
														"nodeType": "YulTypedName",
														"src": "851:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:2",
														"nodeType": "YulTypedName",
														"src": "859:4:2",
														"type": ""
													}
												],
												"src": "810:141:2"
											},
											{
												"body": {
													"nativeSrc": "1001:49:2",
													"nodeType": "YulBlock",
													"src": "1001:49:2",
													"statements": [
														{
															"nativeSrc": "1011:33:2",
															"nodeType": "YulAssignment",
															"src": "1011:33:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:2"
																		},
																		"nativeSrc": "1025:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:2"
																},
																"nativeSrc": "1021:23:2",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:2",
														"nodeType": "YulTypedName",
														"src": "984:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:2",
														"nodeType": "YulTypedName",
														"src": "994:6:2",
														"type": ""
													}
												],
												"src": "957:93:2"
											},
											{
												"body": {
													"nativeSrc": "1109:54:2",
													"nodeType": "YulBlock",
													"src": "1109:54:2",
													"statements": [
														{
															"nativeSrc": "1119:37:2",
															"nodeType": "YulAssignment",
															"src": "1119:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nativeSrc": "1140:16:2",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:2",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:2"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:2",
														"nodeType": "YulTypedName",
														"src": "1084:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:2",
														"nodeType": "YulTypedName",
														"src": "1090:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:2",
														"nodeType": "YulTypedName",
														"src": "1100:8:2",
														"type": ""
													}
												],
												"src": "1056:107:2"
											},
											{
												"body": {
													"nativeSrc": "1245:317:2",
													"nodeType": "YulBlock",
													"src": "1245:317:2",
													"statements": [
														{
															"nativeSrc": "1255:35:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:2",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:2",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nativeSrc": "1272:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:2"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:2",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:2",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:2"
																},
																"nativeSrc": "1311:97:2",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:2",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:2",
															"nodeType": "YulAssignment",
															"src": "1417:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:2"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:2"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:2"
																},
																"nativeSrc": "1429:39:2",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:2"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:2",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:2"
																}
															]
														},
														{
															"nativeSrc": "1477:30:2",
															"nodeType": "YulAssignment",
															"src": "1477:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:2"
																		},
																		"nativeSrc": "1497:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:2"
																},
																"nativeSrc": "1486:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:2"
																}
															]
														},
														{
															"nativeSrc": "1516:40:2",
															"nodeType": "YulAssignment",
															"src": "1516:40:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:2"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:2"
																		},
																		"nativeSrc": "1536:19:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:2"
																},
																"nativeSrc": "1526:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:2"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:2",
														"nodeType": "YulTypedName",
														"src": "1206:5:2",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:2",
														"nodeType": "YulTypedName",
														"src": "1213:10:2",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:2",
														"nodeType": "YulTypedName",
														"src": "1225:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:2",
														"nodeType": "YulTypedName",
														"src": "1238:6:2",
														"type": ""
													}
												],
												"src": "1169:393:2"
											},
											{
												"body": {
													"nativeSrc": "1613:32:2",
													"nodeType": "YulBlock",
													"src": "1613:32:2",
													"statements": [
														{
															"nativeSrc": "1623:16:2",
															"nodeType": "YulAssignment",
															"src": "1623:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:2",
																"nodeType": "YulIdentifier",
																"src": "1634:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:2",
														"nodeType": "YulTypedName",
														"src": "1595:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:2",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"src": "1568:77:2"
											},
											{
												"body": {
													"nativeSrc": "1683:28:2",
													"nodeType": "YulBlock",
													"src": "1683:28:2",
													"statements": [
														{
															"nativeSrc": "1693:12:2",
															"nodeType": "YulAssignment",
															"src": "1693:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:2",
																"nodeType": "YulIdentifier",
																"src": "1700:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:2",
														"nodeType": "YulTypedName",
														"src": "1669:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:2",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													}
												],
												"src": "1651:60:2"
											},
											{
												"body": {
													"nativeSrc": "1777:82:2",
													"nodeType": "YulBlock",
													"src": "1777:82:2",
													"statements": [
														{
															"nativeSrc": "1787:66:2",
															"nodeType": "YulAssignment",
															"src": "1787:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:2"
																				},
																				"nativeSrc": "1827:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:2"
																		},
																		"nativeSrc": "1818:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:2"
																},
																"nativeSrc": "1800:53:2",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:2",
														"nodeType": "YulTypedName",
														"src": "1757:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:2",
														"nodeType": "YulTypedName",
														"src": "1767:9:2",
														"type": ""
													}
												],
												"src": "1717:142:2"
											},
											{
												"body": {
													"nativeSrc": "1912:28:2",
													"nodeType": "YulBlock",
													"src": "1912:28:2",
													"statements": [
														{
															"nativeSrc": "1922:12:2",
															"nodeType": "YulAssignment",
															"src": "1922:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:2",
																"nodeType": "YulIdentifier",
																"src": "1929:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:2"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:2",
														"nodeType": "YulTypedName",
														"src": "1898:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:2",
														"nodeType": "YulTypedName",
														"src": "1908:3:2",
														"type": ""
													}
												],
												"src": "1865:75:2"
											},
											{
												"body": {
													"nativeSrc": "2022:193:2",
													"nodeType": "YulBlock",
													"src": "2022:193:2",
													"statements": [
														{
															"nativeSrc": "2032:63:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:2",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:2"
																},
																"nativeSrc": "2056:39:2",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:2"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:2",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:2",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:2"
																				},
																				"nativeSrc": "2145:11:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:2"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:2",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:2"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:2",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:2"
																				},
																				"nativeSrc": "2166:41:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:2"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:2",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:2"
																		},
																		"nativeSrc": "2117:91:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:2"
																},
																"nativeSrc": "2104:105:2",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:2"
															},
															"nativeSrc": "2104:105:2",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:2"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:2",
														"nodeType": "YulTypedName",
														"src": "1999:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:2",
														"nodeType": "YulTypedName",
														"src": "2005:6:2",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:2",
														"nodeType": "YulTypedName",
														"src": "2013:7:2",
														"type": ""
													}
												],
												"src": "1946:269:2"
											},
											{
												"body": {
													"nativeSrc": "2270:24:2",
													"nodeType": "YulBlock",
													"src": "2270:24:2",
													"statements": [
														{
															"nativeSrc": "2280:8:2",
															"nodeType": "YulAssignment",
															"src": "2280:8:2",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:2",
																"nodeType": "YulLiteral",
																"src": "2287:1:2",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:2"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:2",
														"nodeType": "YulTypedName",
														"src": "2266:3:2",
														"type": ""
													}
												],
												"src": "2221:73:2"
											},
											{
												"body": {
													"nativeSrc": "2353:136:2",
													"nodeType": "YulBlock",
													"src": "2353:136:2",
													"statements": [
														{
															"nativeSrc": "2363:46:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:2"
																},
																"nativeSrc": "2377:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:2"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:2",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:2"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:2"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:2"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:2"
																},
																"nativeSrc": "2418:65:2",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:2"
															},
															"nativeSrc": "2418:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:2"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:2",
														"nodeType": "YulTypedName",
														"src": "2339:4:2",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:2",
														"nodeType": "YulTypedName",
														"src": "2345:6:2",
														"type": ""
													}
												],
												"src": "2300:189:2"
											},
											{
												"body": {
													"nativeSrc": "2545:136:2",
													"nodeType": "YulBlock",
													"src": "2545:136:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:2",
																"nodeType": "YulBlock",
																"src": "2612:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:2",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:2"
																			},
																			"nativeSrc": "2626:39:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:2"
																		},
																		"nativeSrc": "2626:39:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:2"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:2"
																},
																"nativeSrc": "2562:14:2",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:2"
															},
															"nativeSrc": "2555:120:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:2",
																"nodeType": "YulBlock",
																"src": "2577:26:2",
																"statements": [
																	{
																		"nativeSrc": "2579:22:2",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:2"
																			},
																			"nativeSrc": "2588:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:2",
																"nodeType": "YulBlock",
																"src": "2559:2:2",
																"statements": []
															},
															"src": "2555:120:2"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:2",
														"nodeType": "YulTypedName",
														"src": "2533:5:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:2",
														"nodeType": "YulTypedName",
														"src": "2540:3:2",
														"type": ""
													}
												],
												"src": "2495:186:2"
											},
											{
												"body": {
													"nativeSrc": "2766:464:2",
													"nodeType": "YulBlock",
													"src": "2766:464:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:2",
																"nodeType": "YulBlock",
																"src": "2792:431:2",
																"statements": [
																	{
																		"nativeSrc": "2806:54:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:2",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:2"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:2",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:2"
																			},
																			"nativeSrc": "2822:38:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:2"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:2",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:2",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:2",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:2"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:2",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:2"
																					},
																					"nativeSrc": "2906:29:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:2"
																			},
																			"nativeSrc": "2892:44:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:2",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:2",
																			"nodeType": "YulBlock",
																			"src": "3093:27:2",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:2",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:2",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:2",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:2",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:2",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:2",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:2"
																			},
																			"nativeSrc": "3074:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:2"
																		},
																		"nativeSrc": "3071:49:2",
																		"nodeType": "YulIf",
																		"src": "3071:49:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:2",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:2",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:2"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:2",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:2"
																							},
																							"nativeSrc": "3189:22:2",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:2"
																					},
																					"nativeSrc": "3175:37:2",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:2"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:2",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:2"
																			},
																			"nativeSrc": "3133:80:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:2"
																		},
																		"nativeSrc": "3133:80:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:2"
																},
																"nativeSrc": "2780:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:2"
															},
															"nativeSrc": "2777:446:2",
															"nodeType": "YulIf",
															"src": "2777:446:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:2",
														"nodeType": "YulTypedName",
														"src": "2742:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:2",
														"nodeType": "YulTypedName",
														"src": "2749:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:2",
														"nodeType": "YulTypedName",
														"src": "2754:10:2",
														"type": ""
													}
												],
												"src": "2687:543:2"
											},
											{
												"body": {
													"nativeSrc": "3299:54:2",
													"nodeType": "YulBlock",
													"src": "3299:54:2",
													"statements": [
														{
															"nativeSrc": "3309:37:2",
															"nodeType": "YulAssignment",
															"src": "3309:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:2"
																},
																"nativeSrc": "3330:16:2",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:2"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:2",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:2"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:2",
														"nodeType": "YulTypedName",
														"src": "3274:4:2",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:2",
														"nodeType": "YulTypedName",
														"src": "3280:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:2",
														"nodeType": "YulTypedName",
														"src": "3290:8:2",
														"type": ""
													}
												],
												"src": "3236:117:2"
											},
											{
												"body": {
													"nativeSrc": "3410:118:2",
													"nodeType": "YulBlock",
													"src": "3410:118:2",
													"statements": [
														{
															"nativeSrc": "3420:68:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:2",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:2",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:2"
																				},
																				"nativeSrc": "3465:13:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:2",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:2"
																				},
																				"nativeSrc": "3480:6:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:2"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:2"
																		},
																		"nativeSrc": "3436:51:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:2"
																},
																"nativeSrc": "3432:56:2",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:2"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:2",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:2",
															"nodeType": "YulAssignment",
															"src": "3497:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:2"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:2"
																},
																"nativeSrc": "3507:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:2"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:2",
														"nodeType": "YulTypedName",
														"src": "3387:4:2",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:2",
														"nodeType": "YulTypedName",
														"src": "3393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:2",
														"nodeType": "YulTypedName",
														"src": "3403:6:2",
														"type": ""
													}
												],
												"src": "3359:169:2"
											},
											{
												"body": {
													"nativeSrc": "3614:214:2",
													"nodeType": "YulBlock",
													"src": "3614:214:2",
													"statements": [
														{
															"nativeSrc": "3747:37:2",
															"nodeType": "YulAssignment",
															"src": "3747:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:2"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:2"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:2"
																},
																"nativeSrc": "3755:29:2",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:2"
																}
															]
														},
														{
															"nativeSrc": "3793:29:2",
															"nodeType": "YulAssignment",
															"src": "3793:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:2",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:2"
																		},
																		"nativeSrc": "3810:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:2"
																},
																"nativeSrc": "3801:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:2",
														"nodeType": "YulTypedName",
														"src": "3595:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:2",
														"nodeType": "YulTypedName",
														"src": "3601:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:2",
														"nodeType": "YulTypedName",
														"src": "3609:4:2",
														"type": ""
													}
												],
												"src": "3533:295:2"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:2",
													"nodeType": "YulBlock",
													"src": "3925:1303:2",
													"statements": [
														{
															"nativeSrc": "3936:51:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:2",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:2"
																},
																"nativeSrc": "3950:37:2",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:2",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:2",
																"nodeType": "YulBlock",
																"src": "4072:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:2"
																			},
																			"nativeSrc": "4074:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:2"
																		},
																		"nativeSrc": "4074:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:2",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:2"
																},
																"nativeSrc": "4041:30:2",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:2"
															},
															"nativeSrc": "4038:56:2",
															"nodeType": "YulIf",
															"src": "4038:56:2"
														},
														{
															"nativeSrc": "4104:52:2",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:2"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:2"
																		},
																		"nativeSrc": "4144:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:2"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:2",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:2"
																},
																"nativeSrc": "4118:38:2",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:2"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:2",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:2"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:2"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:2",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:2"
																},
																"nativeSrc": "4203:67:2",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:2"
															},
															"nativeSrc": "4203:67:2",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:2"
														},
														{
															"nativeSrc": "4280:18:2",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:2",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:2",
																"nodeType": "YulLiteral",
																"src": "4297:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:2",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:2",
															"nodeType": "YulAssignment",
															"src": "4308:17:2",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:2",
																"nodeType": "YulLiteral",
																"src": "4321:4:2",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:2",
																		"nodeType": "YulBlock",
																		"src": "4372:611:2",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:2",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:2",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:2",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:2"
																							},
																							"nativeSrc": "4413:9:2",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:2"
																					},
																					"nativeSrc": "4401:22:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:2",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:2",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:2",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:2",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:2"
																					},
																					"nativeSrc": "4451:37:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:2",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:2",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:2",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:2",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:2",
																					"nodeType": "YulBlock",
																					"src": "4569:163:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:2",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:2",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:2"
																												},
																												"nativeSrc": "4608:19:2",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:2",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:2"
																										},
																										"nativeSrc": "4602:26:2",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:2"
																								},
																								"nativeSrc": "4587:42:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:2"
																							},
																							"nativeSrc": "4587:42:2",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:2"
																						},
																						{
																							"nativeSrc": "4646:24:2",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:2"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:2",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:2"
																								},
																								"nativeSrc": "4656:14:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:2"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:2",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:2",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:2"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:2",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:2",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:2"
																								},
																								"nativeSrc": "4700:18:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:2",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:2",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:2"
																					},
																					"nativeSrc": "4532:14:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:2"
																				},
																				"nativeSrc": "4524:208:2",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:2",
																					"nodeType": "YulBlock",
																					"src": "4547:21:2",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:2",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:2",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:2"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:2",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:2",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:2"
																								},
																								"nativeSrc": "4554:12:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:2",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:2",
																					"nodeType": "YulBlock",
																					"src": "4528:3:2",
																					"statements": []
																				},
																				"src": "4524:208:2"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:2",
																					"nodeType": "YulBlock",
																					"src": "4768:156:2",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:2",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:2",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:2",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:2"
																										},
																										"nativeSrc": "4809:19:2",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:2",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:2"
																								},
																								"nativeSrc": "4803:26:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:2",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:2",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:2",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:2",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:2"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:2",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:2",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:2",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:2"
																												},
																												"nativeSrc": "4891:17:2",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:2"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:2",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:2"
																										},
																										"nativeSrc": "4861:48:2",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:2"
																								},
																								"nativeSrc": "4846:64:2",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:2"
																							},
																							"nativeSrc": "4846:64:2",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:2",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:2"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:2",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:2"
																					},
																					"nativeSrc": "4748:19:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:2"
																				},
																				"nativeSrc": "4745:179:2",
																				"nodeType": "YulIf",
																				"src": "4745:179:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:2",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:2"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:2",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:2",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:2"
																									},
																									"nativeSrc": "4954:14:2",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:2",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:2"
																							},
																							"nativeSrc": "4950:22:2",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:2"
																					},
																					"nativeSrc": "4937:36:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:2"
																				},
																				"nativeSrc": "4937:36:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:2"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:2",
																	"nodeType": "YulCase",
																	"src": "4365:618:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:2",
																		"nodeType": "YulBlock",
																		"src": "5000:222:2",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:2",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:2",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:2",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:2",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:2",
																					"nodeType": "YulBlock",
																					"src": "5051:67:2",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:2",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:2",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:2",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:2",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:2"
																										},
																										"nativeSrc": "5084:19:2",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:2",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:2"
																								},
																								"nativeSrc": "5078:26:2",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:2",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:2"
																				},
																				"nativeSrc": "5041:77:2",
																				"nodeType": "YulIf",
																				"src": "5041:77:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:2",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:2",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:2"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:2",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:2"
																							},
																							"nativeSrc": "5144:67:2",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:2"
																					},
																					"nativeSrc": "5131:81:2",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:2"
																				},
																				"nativeSrc": "5131:81:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:2"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:2",
																	"nodeType": "YulCase",
																	"src": "4992:230:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:2"
																},
																"nativeSrc": "4342:14:2",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:2"
															},
															"nativeSrc": "4335:887:2",
															"nodeType": "YulSwitch",
															"src": "4335:887:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:2",
														"nodeType": "YulTypedName",
														"src": "3914:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:2",
														"nodeType": "YulTypedName",
														"src": "3920:3:2",
														"type": ""
													}
												],
												"src": "3833:1395:2"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f805f6101000a81548160ff021916908360ff1602179055506040518060400160405280601481526020017f596f7520637261636b65642074686520636f64650000000000000000000000008152506001908161006191906102ad565b5034801561006d575f80fd5b5061037c565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806100ee57607f821691505b602082108103610101576101006100aa565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610128565b61016d8683610128565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101b16101ac6101a784610185565b61018e565b610185565b9050919050565b5f819050919050565b6101ca83610197565b6101de6101d6826101b8565b848454610134565b825550505050565b5f90565b6101f26101e6565b6101fd8184846101c1565b505050565b5b81811015610220576102155f826101ea565b600181019050610203565b5050565b601f8211156102655761023681610107565b61023f84610119565b8101602085101561024e578190505b61026261025a85610119565b830182610202565b50505b505050565b5f82821c905092915050565b5f6102855f198460080261026a565b1980831691505092915050565b5f61029d8383610276565b9150826002028217905092915050565b6102b682610073565b67ffffffffffffffff8111156102cf576102ce61007d565b5b6102d982546100d7565b6102e4828285610224565b5f60209050601f831160018114610315575f8415610303578287015190505b61030d8582610292565b865550610374565b601f19841661032386610107565b5f5b8281101561034a57848901518255600182019150602085019450602081019050610325565b868310156103675784890151610363601f891682610276565b8355505b6001600288020188555050505b505050505050565b6103fa806103895f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80631687fe8e146100435780635763440b1461004d5780635b9fdc301461006b575b5f80fd5b61004b610089565b005b6100556100dc565b6040516100629190610230565b60405180910390f35b6100736100ec565b60405161008091906102b9565b60405180910390f35b5f806100ae60015f8054906101000a900460ff1660ff166101e990919063ffffffff16565b91509150816100be5750506100da565b805f806101000a81548160ff021916908360ff16021790555050505b565b5f8054906101000a900460ff1681565b6060600a5f8054906101000a900460ff1660ff1611801561011c575060145f8054906101000a900460ff1660ff16105b61015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610349565b60405180910390fd5b6001805461016890610394565b80601f016020809104026020016040519081016040528092919081815260200182805461019490610394565b80156101df5780601f106101b6576101008083540402835291602001916101df565b820191905f5260205f20905b8154815290600101906020018083116101c257829003601f168201915b5050505050905090565b5f805f838501905084811015610205575f80925092505061020e565b60018192509250505b9250929050565b5f60ff82169050919050565b61022a81610215565b82525050565b5f6020820190506102435f830184610221565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61028b82610249565b6102958185610253565b93506102a5818560208601610263565b6102ae81610271565b840191505092915050565b5f6020820190508181035f8301526102d18184610281565b905092915050565b7f436f756e7465722073686f756c64206265206265747765656e20313020616e645f8201527f2032300000000000000000000000000000000000000000000000000000000000602082015250565b5f610333602383610253565b915061033e826102d9565b604082019050919050565b5f6020820190508181035f83015261036081610327565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103ab57607f821691505b6020821081036103be576103bd610367565b5b5091905056fea2646970667358221220169e3f9f9fd09f2ee98c0393c3200341d6a69457f49b161f4afb38fdff724dbe64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x596F7520637261636B65642074686520636F6465000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x6D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x101 JUMPI PUSH2 0x100 PUSH2 0xAA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x163 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x128 JUMP JUMPDEST PUSH2 0x16D DUP7 DUP4 PUSH2 0x128 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1 PUSH2 0x1AC PUSH2 0x1A7 DUP5 PUSH2 0x185 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA DUP4 PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D6 DUP3 PUSH2 0x1B8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x134 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x1FD DUP2 DUP5 DUP5 PUSH2 0x1C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH2 0x215 PUSH0 DUP3 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x203 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH2 0x236 DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x23F DUP5 PUSH2 0x119 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x24E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x262 PUSH2 0x25A DUP6 PUSH2 0x119 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x202 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x285 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x26A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29D DUP4 DUP4 PUSH2 0x276 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B6 DUP3 PUSH2 0x73 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CF JUMPI PUSH2 0x2CE PUSH2 0x7D JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP3 SLOAD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x2E4 DUP3 DUP3 DUP6 PUSH2 0x224 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x315 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x303 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x30D DUP6 DUP3 PUSH2 0x292 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x374 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x323 DUP7 PUSH2 0x107 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x325 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x367 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x363 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x276 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3FA DUP1 PUSH2 0x389 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1687FE8E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x5763440B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x5B9FDC30 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0xAE PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH2 0x1E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBE JUMPI POP POP PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x11C JUMPI POP PUSH1 0x14 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x168 SWAP1 PUSH2 0x394 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x194 SWAP1 PUSH2 0x394 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x215 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243 PUSH0 DUP4 ADD DUP5 PUSH2 0x221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28B DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x295 DUP2 DUP6 PUSH2 0x253 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D1 DUP2 DUP5 PUSH2 0x281 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722073686F756C64206265206265747765656E20313020616E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x2032300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x333 PUSH1 0x23 DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP PUSH2 0x33E DUP3 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x360 DUP2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BE JUMPI PUSH2 0x3BD PUSH2 0x367 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SWAP15 EXTCODEHASH SWAP16 SWAP16 0xD0 SWAP16 0x2E 0xE9 DUP13 SUB SWAP4 0xC3 KECCAK256 SUB COINBASE 0xD6 0xA6 SWAP5 JUMPI DELEGATECALL SWAP12 AND 0x1F BLOBBASEFEE 0xFB CODESIZE REVERT SELFDESTRUCT PUSH19 0x4DBE64736F6C63430008190033000000000000 ",
							"sourceMap": "142:720:1:-:0;;;292:1;262:31;;;;;;;;;;;;;;;;;;;;300:54;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;142:720;;;;;;;;;;;;7:99:2;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;142:720:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@currentCounter_1062": {
									"entryPoint": 220,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getSecret_1084": {
									"entryPoint": 236,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tryAdd_42": {
									"entryPoint": 489,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@updateCounter_1109": {
									"entryPoint": 137,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3206:2",
										"nodeType": "YulBlock",
										"src": "0:3206:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "50:43:2",
													"nodeType": "YulBlock",
													"src": "50:43:2",
													"statements": [
														{
															"nativeSrc": "60:27:2",
															"nodeType": "YulAssignment",
															"src": "60:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "75:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "75:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "82:4:2",
																		"nodeType": "YulLiteral",
																		"src": "82:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "71:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "71:3:2"
																},
																"nativeSrc": "71:16:2",
																"nodeType": "YulFunctionCall",
																"src": "71:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "60:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "60:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7:86:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "32:5:2",
														"nodeType": "YulTypedName",
														"src": "32:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "42:7:2",
														"nodeType": "YulTypedName",
														"src": "42:7:2",
														"type": ""
													}
												],
												"src": "7:86:2"
											},
											{
												"body": {
													"nativeSrc": "160:51:2",
													"nodeType": "YulBlock",
													"src": "160:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "177:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "177:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "198:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "198:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "182:15:2",
																			"nodeType": "YulIdentifier",
																			"src": "182:15:2"
																		},
																		"nativeSrc": "182:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "182:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "170:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "170:6:2"
																},
																"nativeSrc": "170:35:2",
																"nodeType": "YulFunctionCall",
																"src": "170:35:2"
															},
															"nativeSrc": "170:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "170:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "99:112:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "148:5:2",
														"nodeType": "YulTypedName",
														"src": "148:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "155:3:2",
														"nodeType": "YulTypedName",
														"src": "155:3:2",
														"type": ""
													}
												],
												"src": "99:112:2"
											},
											{
												"body": {
													"nativeSrc": "311:120:2",
													"nodeType": "YulBlock",
													"src": "311:120:2",
													"statements": [
														{
															"nativeSrc": "321:26:2",
															"nodeType": "YulAssignment",
															"src": "321:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "333:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "333:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "344:2:2",
																		"nodeType": "YulLiteral",
																		"src": "344:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "329:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "329:3:2"
																},
																"nativeSrc": "329:18:2",
																"nodeType": "YulFunctionCall",
																"src": "329:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "321:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "321:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "397:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "410:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "421:1:2",
																				"nodeType": "YulLiteral",
																				"src": "421:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "406:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "406:3:2"
																		},
																		"nativeSrc": "406:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "406:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "357:39:2",
																	"nodeType": "YulIdentifier",
																	"src": "357:39:2"
																},
																"nativeSrc": "357:67:2",
																"nodeType": "YulFunctionCall",
																"src": "357:67:2"
															},
															"nativeSrc": "357:67:2",
															"nodeType": "YulExpressionStatement",
															"src": "357:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "217:214:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "283:9:2",
														"nodeType": "YulTypedName",
														"src": "283:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "295:6:2",
														"nodeType": "YulTypedName",
														"src": "295:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "306:4:2",
														"nodeType": "YulTypedName",
														"src": "306:4:2",
														"type": ""
													}
												],
												"src": "217:214:2"
											},
											{
												"body": {
													"nativeSrc": "496:40:2",
													"nodeType": "YulBlock",
													"src": "496:40:2",
													"statements": [
														{
															"nativeSrc": "507:22:2",
															"nodeType": "YulAssignment",
															"src": "507:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "523:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "523:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "517:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "517:5:2"
																},
																"nativeSrc": "517:12:2",
																"nodeType": "YulFunctionCall",
																"src": "517:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "507:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "437:99:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "479:5:2",
														"nodeType": "YulTypedName",
														"src": "479:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "489:6:2",
														"nodeType": "YulTypedName",
														"src": "489:6:2",
														"type": ""
													}
												],
												"src": "437:99:2"
											},
											{
												"body": {
													"nativeSrc": "638:73:2",
													"nodeType": "YulBlock",
													"src": "638:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "655:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "655:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "660:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "660:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:2"
																},
																"nativeSrc": "648:19:2",
																"nodeType": "YulFunctionCall",
																"src": "648:19:2"
															},
															"nativeSrc": "648:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "648:19:2"
														},
														{
															"nativeSrc": "676:29:2",
															"nodeType": "YulAssignment",
															"src": "676:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "695:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "695:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "700:4:2",
																		"nodeType": "YulLiteral",
																		"src": "700:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "691:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:2"
																},
																"nativeSrc": "691:14:2",
																"nodeType": "YulFunctionCall",
																"src": "691:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "676:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "676:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "542:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "610:3:2",
														"nodeType": "YulTypedName",
														"src": "610:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "615:6:2",
														"nodeType": "YulTypedName",
														"src": "615:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "626:11:2",
														"nodeType": "YulTypedName",
														"src": "626:11:2",
														"type": ""
													}
												],
												"src": "542:169:2"
											},
											{
												"body": {
													"nativeSrc": "779:77:2",
													"nodeType": "YulBlock",
													"src": "779:77:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "796:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "796:3:2"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "801:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "806:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:2"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "790:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "790:5:2"
																},
																"nativeSrc": "790:23:2",
																"nodeType": "YulFunctionCall",
																"src": "790:23:2"
															},
															"nativeSrc": "790:23:2",
															"nodeType": "YulExpressionStatement",
															"src": "790:23:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "833:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:2"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "838:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "829:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:2"
																		},
																		"nativeSrc": "829:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "829:16:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "847:1:2",
																		"nodeType": "YulLiteral",
																		"src": "847:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "822:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:2"
																},
																"nativeSrc": "822:27:2",
																"nodeType": "YulFunctionCall",
																"src": "822:27:2"
															},
															"nativeSrc": "822:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "822:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "717:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "761:3:2",
														"nodeType": "YulTypedName",
														"src": "761:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "766:3:2",
														"nodeType": "YulTypedName",
														"src": "766:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "771:6:2",
														"nodeType": "YulTypedName",
														"src": "771:6:2",
														"type": ""
													}
												],
												"src": "717:139:2"
											},
											{
												"body": {
													"nativeSrc": "910:54:2",
													"nodeType": "YulBlock",
													"src": "910:54:2",
													"statements": [
														{
															"nativeSrc": "920:38:2",
															"nodeType": "YulAssignment",
															"src": "920:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "938:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "938:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "945:2:2",
																				"nodeType": "YulLiteral",
																				"src": "945:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "934:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:2"
																		},
																		"nativeSrc": "934:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "934:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "954:2:2",
																				"nodeType": "YulLiteral",
																				"src": "954:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "950:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:2"
																		},
																		"nativeSrc": "950:7:2",
																		"nodeType": "YulFunctionCall",
																		"src": "950:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "930:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:2"
																},
																"nativeSrc": "930:28:2",
																"nodeType": "YulFunctionCall",
																"src": "930:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "920:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "920:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "862:102:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "893:5:2",
														"nodeType": "YulTypedName",
														"src": "893:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "903:6:2",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													}
												],
												"src": "862:102:2"
											},
											{
												"body": {
													"nativeSrc": "1062:285:2",
													"nodeType": "YulBlock",
													"src": "1062:285:2",
													"statements": [
														{
															"nativeSrc": "1072:53:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1072:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1119:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1119:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1086:32:2",
																	"nodeType": "YulIdentifier",
																	"src": "1086:32:2"
																},
																"nativeSrc": "1086:39:2",
																"nodeType": "YulFunctionCall",
																"src": "1086:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1076:6:2",
																	"nodeType": "YulTypedName",
																	"src": "1076:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1134:78:2",
															"nodeType": "YulAssignment",
															"src": "1134:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1200:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1205:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1205:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1141:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "1141:58:2"
																},
																"nativeSrc": "1141:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1141:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1134:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1260:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1260:5:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1267:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1267:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1256:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:2"
																		},
																		"nativeSrc": "1256:16:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1256:16:2"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1274:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1274:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1279:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1279:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1221:34:2",
																	"nodeType": "YulIdentifier",
																	"src": "1221:34:2"
																},
																"nativeSrc": "1221:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1221:65:2"
															},
															"nativeSrc": "1221:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1221:65:2"
														},
														{
															"nativeSrc": "1295:46:2",
															"nodeType": "YulAssignment",
															"src": "1295:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1306:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1306:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1333:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1333:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1311:21:2",
																			"nodeType": "YulIdentifier",
																			"src": "1311:21:2"
																		},
																		"nativeSrc": "1311:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1302:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:2"
																},
																"nativeSrc": "1302:39:2",
																"nodeType": "YulFunctionCall",
																"src": "1302:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1295:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1295:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "970:377:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1043:5:2",
														"nodeType": "YulTypedName",
														"src": "1043:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1050:3:2",
														"nodeType": "YulTypedName",
														"src": "1050:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1058:3:2",
														"nodeType": "YulTypedName",
														"src": "1058:3:2",
														"type": ""
													}
												],
												"src": "970:377:2"
											},
											{
												"body": {
													"nativeSrc": "1471:195:2",
													"nodeType": "YulBlock",
													"src": "1471:195:2",
													"statements": [
														{
															"nativeSrc": "1481:26:2",
															"nodeType": "YulAssignment",
															"src": "1481:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1493:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1493:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1504:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1504:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1489:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:2"
																},
																"nativeSrc": "1489:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1489:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1481:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1481:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1528:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1528:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1539:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1539:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1524:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:2"
																		},
																		"nativeSrc": "1524:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1547:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1547:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1553:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1543:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:2"
																		},
																		"nativeSrc": "1543:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1517:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:2"
																},
																"nativeSrc": "1517:47:2",
																"nodeType": "YulFunctionCall",
																"src": "1517:47:2"
															},
															"nativeSrc": "1517:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "1517:47:2"
														},
														{
															"nativeSrc": "1573:86:2",
															"nodeType": "YulAssignment",
															"src": "1573:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1645:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:2"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1654:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1654:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1581:63:2",
																	"nodeType": "YulIdentifier",
																	"src": "1581:63:2"
																},
																"nativeSrc": "1581:78:2",
																"nodeType": "YulFunctionCall",
																"src": "1581:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1573:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1573:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1353:313:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1443:9:2",
														"nodeType": "YulTypedName",
														"src": "1443:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1455:6:2",
														"nodeType": "YulTypedName",
														"src": "1455:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1466:4:2",
														"nodeType": "YulTypedName",
														"src": "1466:4:2",
														"type": ""
													}
												],
												"src": "1353:313:2"
											},
											{
												"body": {
													"nativeSrc": "1778:116:2",
													"nodeType": "YulBlock",
													"src": "1778:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1800:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1808:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1808:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1796:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:2"
																		},
																		"nativeSrc": "1796:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1796:14:2"
																	},
																	{
																		"hexValue": "436f756e7465722073686f756c64206265206265747765656e20313020616e64",
																		"kind": "string",
																		"nativeSrc": "1812:34:2",
																		"nodeType": "YulLiteral",
																		"src": "1812:34:2",
																		"type": "",
																		"value": "Counter should be between 10 and"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1789:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:2"
																},
																"nativeSrc": "1789:58:2",
																"nodeType": "YulFunctionCall",
																"src": "1789:58:2"
															},
															"nativeSrc": "1789:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "1789:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1868:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1876:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1876:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1864:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:2"
																		},
																		"nativeSrc": "1864:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1864:15:2"
																	},
																	{
																		"hexValue": "203230",
																		"kind": "string",
																		"nativeSrc": "1881:5:2",
																		"nodeType": "YulLiteral",
																		"src": "1881:5:2",
																		"type": "",
																		"value": " 20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1857:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:2"
																},
																"nativeSrc": "1857:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1857:30:2"
															},
															"nativeSrc": "1857:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1857:30:2"
														}
													]
												},
												"name": "store_literal_in_memory_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c",
												"nativeSrc": "1672:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1770:6:2",
														"nodeType": "YulTypedName",
														"src": "1770:6:2",
														"type": ""
													}
												],
												"src": "1672:222:2"
											},
											{
												"body": {
													"nativeSrc": "2046:220:2",
													"nodeType": "YulBlock",
													"src": "2046:220:2",
													"statements": [
														{
															"nativeSrc": "2056:74:2",
															"nodeType": "YulAssignment",
															"src": "2056:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2122:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2122:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2127:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2127:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2063:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "2063:58:2"
																},
																"nativeSrc": "2063:67:2",
																"nodeType": "YulFunctionCall",
																"src": "2063:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2056:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2056:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2228:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2228:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c",
																	"nativeSrc": "2139:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "2139:88:2"
																},
																"nativeSrc": "2139:93:2",
																"nodeType": "YulFunctionCall",
																"src": "2139:93:2"
															},
															"nativeSrc": "2139:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "2139:93:2"
														},
														{
															"nativeSrc": "2241:19:2",
															"nodeType": "YulAssignment",
															"src": "2241:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2252:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2252:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2257:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2257:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2248:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:2"
																},
																"nativeSrc": "2248:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2248:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2241:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2241:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1900:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2034:3:2",
														"nodeType": "YulTypedName",
														"src": "2034:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2042:3:2",
														"nodeType": "YulTypedName",
														"src": "2042:3:2",
														"type": ""
													}
												],
												"src": "1900:366:2"
											},
											{
												"body": {
													"nativeSrc": "2443:248:2",
													"nodeType": "YulBlock",
													"src": "2443:248:2",
													"statements": [
														{
															"nativeSrc": "2453:26:2",
															"nodeType": "YulAssignment",
															"src": "2453:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2465:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2465:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2461:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:2"
																},
																"nativeSrc": "2461:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2461:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2453:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2453:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2511:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:2"
																		},
																		"nativeSrc": "2496:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2519:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2519:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2525:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2525:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2515:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:2"
																		},
																		"nativeSrc": "2515:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2515:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2489:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:2"
																},
																"nativeSrc": "2489:47:2",
																"nodeType": "YulFunctionCall",
																"src": "2489:47:2"
															},
															"nativeSrc": "2489:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "2489:47:2"
														},
														{
															"nativeSrc": "2545:139:2",
															"nodeType": "YulAssignment",
															"src": "2545:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2679:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2679:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2553:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "2553:124:2"
																},
																"nativeSrc": "2553:131:2",
																"nodeType": "YulFunctionCall",
																"src": "2553:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2545:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2545:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2272:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2423:9:2",
														"nodeType": "YulTypedName",
														"src": "2423:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2438:4:2",
														"nodeType": "YulTypedName",
														"src": "2438:4:2",
														"type": ""
													}
												],
												"src": "2272:419:2"
											},
											{
												"body": {
													"nativeSrc": "2725:152:2",
													"nodeType": "YulBlock",
													"src": "2725:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2742:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2742:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2745:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2745:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2735:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2735:6:2"
																},
																"nativeSrc": "2735:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2735:88:2"
															},
															"nativeSrc": "2735:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2735:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2839:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2839:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2842:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:2"
																},
																"nativeSrc": "2832:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2832:15:2"
															},
															"nativeSrc": "2832:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2832:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2863:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2863:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2866:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2866:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2856:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:2"
																},
																"nativeSrc": "2856:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2856:15:2"
															},
															"nativeSrc": "2856:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2856:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2697:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2697:180:2"
											},
											{
												"body": {
													"nativeSrc": "2934:269:2",
													"nodeType": "YulBlock",
													"src": "2934:269:2",
													"statements": [
														{
															"nativeSrc": "2944:22:2",
															"nodeType": "YulAssignment",
															"src": "2944:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2958:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2958:4:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2964:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2964:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2954:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:2"
																},
																"nativeSrc": "2954:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2954:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2944:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:2"
																}
															]
														},
														{
															"nativeSrc": "2975:38:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2975:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3005:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3005:4:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3011:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3011:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3001:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:2"
																},
																"nativeSrc": "3001:12:2",
																"nodeType": "YulFunctionCall",
																"src": "3001:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2979:18:2",
																	"nodeType": "YulTypedName",
																	"src": "2979:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3052:51:2",
																"nodeType": "YulBlock",
																"src": "3052:51:2",
																"statements": [
																	{
																		"nativeSrc": "3066:27:2",
																		"nodeType": "YulAssignment",
																		"src": "3066:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3080:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3080:6:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:2",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3076:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "3076:3:2"
																			},
																			"nativeSrc": "3076:17:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3076:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3066:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3066:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3032:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "3032:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3025:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:2"
																},
																"nativeSrc": "3025:26:2",
																"nodeType": "YulFunctionCall",
																"src": "3025:26:2"
															},
															"nativeSrc": "3022:81:2",
															"nodeType": "YulIf",
															"src": "3022:81:2"
														},
														{
															"body": {
																"nativeSrc": "3155:42:2",
																"nodeType": "YulBlock",
																"src": "3155:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3169:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3169:16:2"
																			},
																			"nativeSrc": "3169:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3169:18:2"
																		},
																		"nativeSrc": "3169:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3169:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3119:18:2",
																		"nodeType": "YulIdentifier",
																		"src": "3119:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3142:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3142:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3150:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3150:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3139:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3139:2:2"
																		},
																		"nativeSrc": "3139:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3116:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3116:2:2"
																},
																"nativeSrc": "3116:38:2",
																"nodeType": "YulFunctionCall",
																"src": "3116:38:2"
															},
															"nativeSrc": "3113:84:2",
															"nodeType": "YulIf",
															"src": "3113:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2883:320:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2918:4:2",
														"nodeType": "YulTypedName",
														"src": "2918:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2927:6:2",
														"nodeType": "YulTypedName",
														"src": "2927:6:2",
														"type": ""
													}
												],
												"src": "2883:320:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter should be between 10 and\")\n\n        mstore(add(memPtr, 32), \" 20\")\n\n    }\n\n    function abi_encode_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80631687fe8e146100435780635763440b1461004d5780635b9fdc301461006b575b5f80fd5b61004b610089565b005b6100556100dc565b6040516100629190610230565b60405180910390f35b6100736100ec565b60405161008091906102b9565b60405180910390f35b5f806100ae60015f8054906101000a900460ff1660ff166101e990919063ffffffff16565b91509150816100be5750506100da565b805f806101000a81548160ff021916908360ff16021790555050505b565b5f8054906101000a900460ff1681565b6060600a5f8054906101000a900460ff1660ff1611801561011c575060145f8054906101000a900460ff1660ff16105b61015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610349565b60405180910390fd5b6001805461016890610394565b80601f016020809104026020016040519081016040528092919081815260200182805461019490610394565b80156101df5780601f106101b6576101008083540402835291602001916101df565b820191905f5260205f20905b8154815290600101906020018083116101c257829003601f168201915b5050505050905090565b5f805f838501905084811015610205575f80925092505061020e565b60018192509250505b9250929050565b5f60ff82169050919050565b61022a81610215565b82525050565b5f6020820190506102435f830184610221565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61028b82610249565b6102958185610253565b93506102a5818560208601610263565b6102ae81610271565b840191505092915050565b5f6020820190508181035f8301526102d18184610281565b905092915050565b7f436f756e7465722073686f756c64206265206265747765656e20313020616e645f8201527f2032300000000000000000000000000000000000000000000000000000000000602082015250565b5f610333602383610253565b915061033e826102d9565b604082019050919050565b5f6020820190508181035f83015261036081610327565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103ab57607f821691505b6020821081036103be576103bd610367565b5b5091905056fea2646970667358221220169e3f9f9fd09f2ee98c0393c3200341d6a69457f49b161f4afb38fdff724dbe64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1687FE8E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x5763440B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x5B9FDC30 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0xAE PUSH1 0x1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH2 0x1E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBE JUMPI POP POP PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x11C JUMPI POP PUSH1 0x14 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x168 SWAP1 PUSH2 0x394 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x194 SWAP1 PUSH2 0x394 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x20E JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x215 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243 PUSH0 DUP4 ADD DUP5 PUSH2 0x221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28B DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x295 DUP2 DUP6 PUSH2 0x253 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x263 JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D1 DUP2 DUP5 PUSH2 0x281 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722073686F756C64206265206265747765656E20313020616E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x2032300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x333 PUSH1 0x23 DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP PUSH2 0x33E DUP3 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x360 DUP2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BE JUMPI PUSH2 0x3BD PUSH2 0x367 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND SWAP15 EXTCODEHASH SWAP16 SWAP16 0xD0 SWAP16 0x2E 0xE9 DUP13 SUB SWAP4 0xC3 KECCAK256 SUB COINBASE 0xD6 0xA6 SWAP5 JUMPI DELEGATECALL SWAP12 AND 0x1F BLOBBASEFEE 0xFB CODESIZE REVERT SELFDESTRUCT PUSH19 0x4DBE64736F6C63430008190033000000000000 ",
							"sourceMap": "142:720:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:212;;;:::i;:::-;;262:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;400:198;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:212;692:15;709:11;724:24;746:1;724:14;;;;;;;;;;:21;;;;:24;;;;:::i;:::-;691:57;;;;765:10;761:48;;791:7;;;;761:48;844:6;821:14;;:30;;;;;;;;;;;;;;;;;;680:179;;647:212;:::o;262:31::-;;;;;;;;;;;;:::o;400:198::-;443:13;493:2;476:14;;;;;;;;;;:19;;;:42;;;;;516:2;499:14;;;;;;;;;;:19;;;476:42;468:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;576:14;569:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;400:198;:::o;585:216:0:-;646:4;652:7;695:9;711:1;707;:5;695:17;;734:1;730;:5;726:28;;;745:5;752:1;737:17;;;;;;;726:28;776:4;782:1;768:16;;;;;585:216;;;;;;:::o;7:86:2:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:214::-;306:4;344:2;333:9;329:18;321:26;;357:67;421:1;410:9;406:17;397:6;357:67;:::i;:::-;217:214;;;;:::o;437:99::-;489:6;523:5;517:12;507:22;;437:99;;;:::o;542:169::-;626:11;660:6;655:3;648:19;700:4;695:3;691:14;676:29;;542:169;;;;:::o;717:139::-;806:6;801:3;796;790:23;847:1;838:6;833:3;829:16;822:27;717:139;;;:::o;862:102::-;903:6;954:2;950:7;945:2;938:5;934:14;930:28;920:38;;862:102;;;:::o;970:377::-;1058:3;1086:39;1119:5;1086:39;:::i;:::-;1141:71;1205:6;1200:3;1141:71;:::i;:::-;1134:78;;1221:65;1279:6;1274:3;1267:4;1260:5;1256:16;1221:65;:::i;:::-;1311:29;1333:6;1311:29;:::i;:::-;1306:3;1302:39;1295:46;;1062:285;970:377;;;;:::o;1353:313::-;1466:4;1504:2;1493:9;1489:18;1481:26;;1553:9;1547:4;1543:20;1539:1;1528:9;1524:17;1517:47;1581:78;1654:4;1645:6;1581:78;:::i;:::-;1573:86;;1353:313;;;;:::o;1672:222::-;1812:34;1808:1;1800:6;1796:14;1789:58;1881:5;1876:2;1868:6;1864:15;1857:30;1672:222;:::o;1900:366::-;2042:3;2063:67;2127:2;2122:3;2063:67;:::i;:::-;2056:74;;2139:93;2228:3;2139:93;:::i;:::-;2257:2;2252:3;2248:12;2241:19;;1900:366;;;:::o;2272:419::-;2438:4;2476:2;2465:9;2461:18;2453:26;;2525:9;2519:4;2515:20;2511:1;2500:9;2496:17;2489:47;2553:131;2679:4;2553:131;:::i;:::-;2545:139;;2272:419;;;:::o;2697:180::-;2745:77;2742:1;2735:88;2842:4;2839:1;2832:15;2866:4;2863:1;2856:15;2883:320;2927:6;2964:1;2958:4;2954:12;2944:22;;3011:1;3005:4;3001:12;3032:18;3022:81;;3088:4;3080:6;3076:17;3066:27;;3022:81;3150:2;3142:6;3139:14;3119:18;3116:38;3113:84;;3169:18;;:::i;:::-;3113:84;2934:269;2883:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "203600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"currentCounter()": "2463",
								"getSecret()": "infinite",
								"updateCounter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 262,
									"end": 293,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 262,
									"end": 293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "596F7520637261636B65642074686520636F6465000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 300,
									"end": 354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 300,
									"end": 354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 2
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 142,
									"end": 862,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 142,
									"end": 862,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 862,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220169e3f9f9fd09f2ee98c0393c3200341d6a69457f49b161f4afb38fdff724dbe64736f6c63430008190033",
									".code": [
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "1687FE8E"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "5763440B"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "5B9FDC30"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 142,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 400,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 400,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 692,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 724,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 738,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 724,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 724,
											"end": 738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 724,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 724,
											"end": 745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 724,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 724,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 724,
											"end": 748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 748,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 761,
											"end": 809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 791,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 798,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 809,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 761,
											"end": 809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 821,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 851,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 821,
											"end": 851,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 821,
											"end": 851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 821,
											"end": 851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 680,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 680,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 262,
											"end": 293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 400,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 476,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 476,
											"end": 490,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 476,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 476,
											"end": 490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 476,
											"end": 495,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 476,
											"end": 495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 476,
											"end": 495,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 518,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 476,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 476,
											"end": 518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 476,
											"end": 518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 499,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 499,
											"end": 513,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 499,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 499,
											"end": 513,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 499,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 499,
											"end": 518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 499,
											"end": 518,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 476,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 468,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 558,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 468,
											"end": 558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 576,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 569,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 569,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 707,
											"end": 712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 695,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 695,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 730,
											"end": 731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 726,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 726,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 737,
											"end": 754,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 726,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 585,
											"end": 801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 93,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 93,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42,
											"end": 49,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 86,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 75,
											"end": 80,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 71,
											"end": 87,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 60,
											"end": 87,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 60,
											"end": 87,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 93,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 93,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 99,
											"end": 211,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 99,
											"end": 211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 198,
											"end": 203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 182,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 204,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 182,
											"end": 204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 170,
											"end": 205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 99,
											"end": 211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 406,
											"end": 423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 357,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 357,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 357,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 217,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 437,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 517,
											"end": 529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 542,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 626,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 666,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 655,
											"end": 658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 648,
											"end": 667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 700,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 691,
											"end": 705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 542,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 856,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 717,
											"end": 856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 790,
											"end": 813,
											"name": "MCOPY",
											"source": 2
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 829,
											"end": 845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 822,
											"end": 849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 717,
											"end": 856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 964,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 862,
											"end": 964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 934,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 930,
											"end": 958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 920,
											"end": 958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 920,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1086,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1086,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1141,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1212,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1141,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1212,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1277,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1271,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1221,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1221,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1311,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1340,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1311,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1541,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1654,
											"end": 1658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1581,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1581,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1846,
											"name": "PUSH",
											"source": 2,
											"value": "436F756E7465722073686F756C64206265206265747765656E20313020616E64"
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "PUSH",
											"source": 2,
											"value": "2032300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1876,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1900,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2122,
											"end": 2125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2063,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2063,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2232,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2139,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 2266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 2266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2553,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2553,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2697,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2832,
											"end": 2847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 3203,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2883,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 3080,
											"end": 3086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3153,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3113,
											"end": 3197,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3169,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3197,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3113,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 3203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 3203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 3203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 3203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Conditions.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"currentCounter()": "5763440b",
							"getSecret()": "5b9fdc30",
							"updateCounter()": "1687fe8e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentCounter\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Conditions.sol\":\"ConditionsContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/Conditions.sol\":{\"keccak256\":\"0x5e806ae6c1590eeaa841b2d054f4df93dea28e92656046953f85c8cb1769abd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba2ea763d2e169df6cfbc19d54f125fc73a411b5c4fa7c605bee36323107164a\",\"dweb:/ipfs/QmTrdXTG57nZoPNenJWLbGEJR77iMtjHkXy19ig2Q2PEe5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1062,
								"contract": "contracts/Conditions.sol:ConditionsContract",
								"label": "currentCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1065,
								"contract": "contracts/Conditions.sol:ConditionsContract",
								"label": "_secretMessage",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1053
						]
					},
					"id": 1054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1053,
							"linearizedBaseContracts": [
								1053
							],
							"name": "Math",
							"nameLocation": "211:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 5,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:0"
									},
									"src": "277:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 10,
									"members": [
										{
											"id": 6,
											"name": "Floor",
											"nameLocation": "336:5:0",
											"nodeType": "EnumValue",
											"src": "336:5:0"
										},
										{
											"id": 7,
											"name": "Ceil",
											"nameLocation": "379:4:0",
											"nodeType": "EnumValue",
											"src": "379:4:0"
										},
										{
											"id": 8,
											"name": "Trunc",
											"nameLocation": "421:5:0",
											"nodeType": "EnumValue",
											"src": "421:5:0"
										},
										{
											"id": 9,
											"name": "Expand",
											"nameLocation": "451:6:0",
											"nodeType": "EnumValue",
											"src": "451:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:0",
									"nodeType": "EnumDefinition",
									"src": "312:169:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "661:140:0",
										"statements": [
											{
												"id": 40,
												"nodeType": "UncheckedBlock",
												"src": "671:124:0",
												"statements": [
													{
														"assignments": [
															23
														],
														"declarations": [
															{
																"constant": false,
																"id": 23,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 40,
																"src": "695:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 22,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 27,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 25,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 28,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 29,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "734:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 35,
														"nodeType": "IfStatement",
														"src": "726:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 21,
															"id": 34,
															"nodeType": "Return",
															"src": "737:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 37,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 38,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 21,
														"id": 39,
														"nodeType": "Return",
														"src": "768:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:0"
									},
									"scope": 1053,
									"src": "585:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "984:113:0",
										"statements": [
											{
												"id": 68,
												"nodeType": "UncheckedBlock",
												"src": "994:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 61,
														"nodeType": "IfStatement",
														"src": "1018:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 53,
															"id": 60,
															"nodeType": "Return",
															"src": "1029:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 63,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1074:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 64,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1078:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 66,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 53,
														"id": 67,
														"nodeType": "Return",
														"src": "1060:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "975:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:0"
									},
									"scope": 1053,
									"src": "908:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1283:417:0",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 82,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 89,
														"nodeType": "IfStatement",
														"src": "1547:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 88,
															"nodeType": "Return",
															"src": "1559:16:0"
														}
													},
													{
														"assignments": [
															91
														],
														"declarations": [
															{
																"constant": false,
																"id": 91,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "1589:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 90,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 95,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 93,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1605:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "1620:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 104,
															"nodeType": "Return",
															"src": "1636:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1681:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 81,
														"id": 109,
														"nodeType": "Return",
														"src": "1667:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1234:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:0"
									},
									"scope": 1053,
									"src": "1207:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1887:114:0",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1925:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1921:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1933:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1978:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1982:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1964:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1838:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:0"
									},
									"scope": 1053,
									"src": "1811:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2198:114:0",
										"statements": [
											{
												"id": 166,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "2232:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "2244:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 161,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "2289:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 162,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2293:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 165,
														"nodeType": "Return",
														"src": "2275:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2138:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2183:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:0"
									},
									"scope": 1053,
									"src": "2122:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2449:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 178,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 179,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "2470:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:0",
													"trueExpression": {
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 177,
												"id": 184,
												"nodeType": "Return",
												"src": "2459:20:0"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2395:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2406:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2440:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:0"
									},
									"scope": 1053,
									"src": "2382:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2624:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2641:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2645:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2653:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:0",
													"trueExpression": {
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 195,
												"id": 202,
												"nodeType": "Return",
												"src": "2634:20:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2570:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2581:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:0"
									},
									"scope": 1053,
									"src": "2557:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2845:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "2900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 215,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2904:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 218,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2910:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 219,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2914:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 221,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 225,
												"nodeType": "Return",
												"src": "2892:28:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:0"
									},
									"scope": 1053,
									"src": "2774:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3219:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "3229:127:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "3241:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 240,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 241,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3344:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 236,
															"id": 243,
															"nodeType": "Return",
															"src": "3333:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3444:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "3458:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 259,
												"nodeType": "Return",
												"src": "3437:35:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:0"
									},
									"scope": 1053,
									"src": "3148:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3901:4018:0",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:0",
												"statements": [
													{
														"assignments": [
															274
														],
														"declarations": [
															{
																"constant": false,
																"id": 274,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4232:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 278,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 276,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "4252:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:0"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4312:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 281,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:0"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:0",
															"nodeType": "YulBlock",
															"src": "4392:122:0",
															"statements": [
																{
																	"nativeSrc": "4410:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:0",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:0"
																				},
																				"nativeSrc": "4433:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:0"
																		},
																		"nativeSrc": "4420:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:0",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:0",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:0"
																				},
																				"nativeSrc": "4470:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:0"
																				},
																				"nativeSrc": "4486:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:0"
																		},
																		"nativeSrc": "4466:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:0",
																"valueSize": 1
															}
														],
														"id": 282,
														"nodeType": "InlineAssembly",
														"src": "4383:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "4595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 291,
														"nodeType": "IfStatement",
														"src": "4591:368:0",
														"trueBody": {
															"id": 290,
															"nodeType": "Block",
															"src": "4607:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 286,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "4925:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 287,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4933:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 272,
																	"id": 289,
																	"nodeType": "Return",
																	"src": "4918:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5065:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 293,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 299,
														"nodeType": "IfStatement",
														"src": "5061:88:0",
														"trueBody": {
															"id": 298,
															"nodeType": "Block",
															"src": "5087:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 295,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "5112:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 297,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															301
														],
														"declarations": [
															{
																"constant": false,
																"id": 301,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5404:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 300,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 302,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:0"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:0",
															"nodeType": "YulBlock",
															"src": "5444:291:0",
															"statements": [
																{
																	"nativeSrc": "5513:38:0",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:0"
																		},
																		"nativeSrc": "5526:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:0",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:0"
																				},
																				"nativeSrc": "5653:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:0"
																		},
																		"nativeSrc": "5642:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:0",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:0"
																		},
																		"nativeSrc": "5700:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:0",
																"valueSize": 1
															}
														],
														"id": 303,
														"nodeType": "InlineAssembly",
														"src": "5435:300:0"
													},
													{
														"assignments": [
															305
														],
														"declarations": [
															{
																"constant": false,
																"id": 305,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5939:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 306,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5954:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 308,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "5973:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:0"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:0",
															"nodeType": "YulBlock",
															"src": "6008:362:0",
															"statements": [
																{
																	"nativeSrc": "6073:37:0",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:0"
																		},
																		"nativeSrc": "6088:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:0",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:0"
																		},
																		"nativeSrc": "6186:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:0",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:0",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:0"
																						},
																						"nativeSrc": "6333:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:0"
																				},
																				"nativeSrc": "6329:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:0",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:0"
																		},
																		"nativeSrc": "6325:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:0",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:0",
																"valueSize": 1
															}
														],
														"id": 313,
														"nodeType": "InlineAssembly",
														"src": "5999:371:0"
													},
													{
														"expression": {
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 314,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "6436:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "6445:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 316,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "6453:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:0"
													},
													{
														"assignments": [
															321
														],
														"declarations": [
															{
																"constant": false,
																"id": 321,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "6775:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 323,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "6798:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:0"
													},
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7046:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:0"
													},
													{
														"expression": {
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7100:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7115:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:0"
													},
													{
														"expression": {
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7170:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7185:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7199:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 352,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:0"
													},
													{
														"expression": {
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7240:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7255:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7269:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:0"
													},
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7325:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7339:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:0"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7396:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:0"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7860:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 379,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "7868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:0"
													},
													{
														"expression": {
															"id": 383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7896:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 272,
														"id": 384,
														"nodeType": "Return",
														"src": "7889:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3819:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3830:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3841:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3885:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:0"
									},
									"scope": 1053,
									"src": "3803:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "8161:192:0",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "8171:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "8195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 407,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8201:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															430
														],
														"referencedDeclaration": 387,
														"src": "8188:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 411,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "8244:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 410,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "8227:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 414,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "8264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 415,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 416,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8270:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 413,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "8223:101:0",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "8288:36:0",
													"statements": [
														{
															"expression": {
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 421,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "8302:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 424,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 427,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "8340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 428,
												"nodeType": "Return",
												"src": "8333:13:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8067:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8089:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8110:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8110:8:0"
													},
													"referencedDeclaration": 10,
													"src": "8110:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:0"
									},
									"scope": 1053,
									"src": "8051:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8644:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "8658:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "8654:45:0",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "8666:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 437,
															"id": 442,
															"nodeType": "Return",
															"src": "8680:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "9378:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 449,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "9406:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 448,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			709,
																			744
																		],
																		"referencedDeclaration": 709,
																		"src": "9401:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:0"
											},
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:0",
												"statements": [
													{
														"expression": {
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 457,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9849:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 458,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9858:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 459,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9862:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:0"
													},
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 467,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9898:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 469,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9907:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 470,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9911:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:0"
													},
													{
														"expression": {
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 478,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9937:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 479,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9947:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 480,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9956:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 481,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9960:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:0"
													},
													{
														"expression": {
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 489,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9986:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 490,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9996:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 491,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10005:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 492,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10009:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:0"
													},
													{
														"expression": {
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 500,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10035:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10045:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 502,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10054:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 503,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10058:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 510,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:0"
													},
													{
														"expression": {
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 511,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10084:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 512,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10094:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 513,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10103:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 514,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10107:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 517,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 521,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:0"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 522,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10133:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 523,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10143:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 524,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 525,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10156:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 534,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "10193:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "10201:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 536,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "10205:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 533,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "10189:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 437,
														"id": 539,
														"nodeType": "Return",
														"src": "10182:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:0"
									},
									"scope": 1053,
									"src": "8587:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "10405:164:0",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:0",
												"statements": [
													{
														"assignments": [
															554
														],
														"declarations": [
															{
																"constant": false,
																"id": 554,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "10439:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 558,
														"initialValue": {
															"arguments": [
																{
																	"id": 556,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "10461:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 555,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	542,
																	577
																],
																"referencedDeclaration": 542,
																"src": "10456:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "10484:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 561,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "10511:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 560,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "10494:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 563,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10524:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 564,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10533:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 566,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "10542:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 572,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 552,
														"id": 574,
														"nodeType": "Return",
														"src": "10477:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10354:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "10354:8:0"
													},
													"referencedDeclaration": 10,
													"src": "10354:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:0"
									},
									"scope": 1053,
									"src": "10329:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "10760:922:0",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "10770:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"hexValue": "30",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:0"
											},
											{
												"id": 705,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "10822:99:0",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "10844:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 594,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "10862:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:0"
																},
																{
																	"expression": {
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 598,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "10893:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 601,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 604,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10938:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 618,
														"nodeType": "IfStatement",
														"src": "10934:96:0",
														"trueBody": {
															"id": 617,
															"nodeType": "Block",
															"src": "10955:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "10973:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 612,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:0"
																},
																{
																	"expression": {
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11003:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 633,
														"nodeType": "IfStatement",
														"src": "11043:96:0",
														"trueBody": {
															"id": 632,
															"nodeType": "Block",
															"src": "11064:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11082:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 627,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:0"
																},
																{
																	"expression": {
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 628,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11112:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 631,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11156:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 648,
														"nodeType": "IfStatement",
														"src": "11152:96:0",
														"trueBody": {
															"id": 647,
															"nodeType": "Block",
															"src": "11173:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11191:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 642,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:0"
																},
																{
																	"expression": {
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11221:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 646,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11265:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 663,
														"nodeType": "IfStatement",
														"src": "11261:93:0",
														"trueBody": {
															"id": 662,
															"nodeType": "Block",
															"src": "11281:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11299:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 657,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:0"
																},
																{
																	"expression": {
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11328:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 661,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11371:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 678,
														"nodeType": "IfStatement",
														"src": "11367:93:0",
														"trueBody": {
															"id": 677,
															"nodeType": "Block",
															"src": "11387:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11405:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:0"
																},
																{
																	"expression": {
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11434:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11477:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 693,
														"nodeType": "IfStatement",
														"src": "11473:93:0",
														"trueBody": {
															"id": 692,
															"nodeType": "Block",
															"src": "11493:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11511:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 687,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:0"
																},
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11540:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11583:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 704,
														"nodeType": "IfStatement",
														"src": "11579:64:0",
														"trueBody": {
															"id": 703,
															"nodeType": "Block",
															"src": "11599:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11617:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 702,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 706,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 586,
													"src": "11669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 707,
												"nodeType": "Return",
												"src": "11662:13:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:0"
									},
									"scope": 1053,
									"src": "10699:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "11915:168:0",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "11949:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 725,
														"initialValue": {
															"arguments": [
																{
																	"id": 723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "11971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 722,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	709,
																	744
																],
																"referencedDeclaration": 709,
																"src": "11966:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "11998:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 728,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "12025:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 727,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12008:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 732,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 731,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 721,
																						"src": "12043:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 733,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "12052:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 739,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 719,
														"id": 741,
														"nodeType": "Return",
														"src": "11991:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11864:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 713,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "11864:8:0"
													},
													"referencedDeclaration": 10,
													"src": "11864:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:0"
									},
									"scope": 1053,
									"src": "11835:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "12276:854:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "12286:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"hexValue": "30",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:0"
											},
											{
												"id": 869,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12342:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "12338:103:0",
														"trueBody": {
															"id": 771,
															"nodeType": "Block",
															"src": "12361:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12379:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:0"
																},
																{
																	"expression": {
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12414:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 770,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12458:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "12454:103:0",
														"trueBody": {
															"id": 788,
															"nodeType": "Block",
															"src": "12477:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12495:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 783,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:0"
																},
																{
																	"expression": {
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12530:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 787,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12574:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "12570:103:0",
														"trueBody": {
															"id": 805,
															"nodeType": "Block",
															"src": "12593:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12611:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 800,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:0"
																},
																{
																	"expression": {
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12646:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 804,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12690:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 823,
														"nodeType": "IfStatement",
														"src": "12686:100:0",
														"trueBody": {
															"id": 822,
															"nodeType": "Block",
															"src": "12708:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 817,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:0"
																},
																{
																	"expression": {
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 818,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12760:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 821,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12803:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "12799:100:0",
														"trueBody": {
															"id": 839,
															"nodeType": "Block",
															"src": "12821:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12839:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:0"
																},
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12873:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 857,
														"nodeType": "IfStatement",
														"src": "12912:100:0",
														"trueBody": {
															"id": 856,
															"nodeType": "Block",
															"src": "12934:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12952:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:0"
																},
																{
																	"expression": {
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12986:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 855,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "13029:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 868,
														"nodeType": "IfStatement",
														"src": "13025:66:0",
														"trueBody": {
															"id": 867,
															"nodeType": "Block",
															"src": "13047:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "13065:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 866,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 870,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 753,
													"src": "13117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 871,
												"nodeType": "Return",
												"src": "13110:13:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12229:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:0"
									},
									"scope": 1053,
									"src": "12214:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "13365:170:0",
										"statements": [
											{
												"id": 906,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:0",
												"statements": [
													{
														"assignments": [
															885
														],
														"declarations": [
															{
																"constant": false,
																"id": 885,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 906,
																"src": "13399:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 889,
														"initialValue": {
															"arguments": [
																{
																	"id": 887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "13422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 886,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	873,
																	908
																],
																"referencedDeclaration": 873,
																"src": "13416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "13449:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 892,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 879,
																						"src": "13476:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 891,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "13459:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 895,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "13495:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "13504:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 883,
														"id": 905,
														"nodeType": "Return",
														"src": "13442:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13299:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13314:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "13314:8:0"
													},
													"referencedDeclaration": 10,
													"src": "13314:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:0"
									},
									"scope": 1053,
									"src": "13284:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "13855:600:0",
										"statements": [
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "13865:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"hexValue": "30",
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:0"
											},
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "13921:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 934,
														"nodeType": "IfStatement",
														"src": "13917:98:0",
														"trueBody": {
															"id": 933,
															"nodeType": "Block",
															"src": "13939:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "13957:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 928,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:0"
																},
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "13988:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14032:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 949,
														"nodeType": "IfStatement",
														"src": "14028:95:0",
														"trueBody": {
															"id": 948,
															"nodeType": "Block",
															"src": "14049:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14067:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 943,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:0"
																},
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14097:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 964,
														"nodeType": "IfStatement",
														"src": "14136:95:0",
														"trueBody": {
															"id": 963,
															"nodeType": "Block",
															"src": "14157:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14175:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 958,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:0"
																},
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14205:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 979,
														"nodeType": "IfStatement",
														"src": "14244:95:0",
														"trueBody": {
															"id": 978,
															"nodeType": "Block",
															"src": "14265:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14283:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:0"
																},
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14313:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 980,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14356:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 990,
														"nodeType": "IfStatement",
														"src": "14352:64:0",
														"trueBody": {
															"id": 989,
															"nodeType": "Block",
															"src": "14372:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14390:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 992,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "14442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 993,
												"nodeType": "Return",
												"src": "14435:13:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13808:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:0"
									},
									"scope": 1053,
									"src": "13792:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "14692:177:0",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:0",
												"statements": [
													{
														"assignments": [
															1007
														],
														"declarations": [
															{
																"constant": false,
																"id": 1007,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "14726:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1006,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"initialValue": {
															"arguments": [
																{
																	"id": 1009,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "14750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1008,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	995,
																	1033
																],
																"referencedDeclaration": 995,
																"src": "14743:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "14777:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1014,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1001,
																						"src": "14804:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1013,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "14787:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1019,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1017,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1007,
																									"src": "14823:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1018,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1020,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1022,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 998,
																					"src": "14838:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1005,
														"id": 1030,
														"nodeType": "Return",
														"src": "14770:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14641:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "14641:8:0"
													},
													"referencedDeclaration": 10,
													"src": "14641:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:0"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:0"
									},
									"scope": 1053,
									"src": "14610:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "15067:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "15090:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1050,
												"nodeType": "Return",
												"src": "15077:31:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15019:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1035,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "15019:8:0"
													},
													"referencedDeclaration": 10,
													"src": "15019:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:0"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:0"
									},
									"scope": 1053,
									"src": "14993:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1054,
							"src": "203:14914:0",
							"usedErrors": [
								5
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:0"
				},
				"id": 0
			},
			"contracts/Conditions.sol": {
				"ast": {
					"absolutePath": "contracts/Conditions.sol",
					"exportedSymbols": {
						"ConditionsContract": [
							1110
						],
						"Math": [
							1053
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1111,
							"sourceUnit": 1054,
							"src": "85:53:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConditionsContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1110,
							"linearizedBaseContracts": [
								1110
							],
							"name": "ConditionsContract",
							"nameLocation": "151:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1059,
									"libraryName": {
										"id": 1057,
										"name": "Math",
										"nameLocations": [
											"211:4:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1053,
										"src": "211:4:1"
									},
									"nodeType": "UsingForDirective",
									"src": "204:22:1",
									"typeName": {
										"id": 1058,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "220:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "5763440b",
									"id": 1062,
									"mutability": "mutable",
									"name": "currentCounter",
									"nameLocation": "275:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "262:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1060,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "262:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "292:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1065,
									"mutability": "mutable",
									"name": "_secretMessage",
									"nameLocation": "315:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "300:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1063,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "300:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "596f7520637261636b65642074686520636f6465",
										"id": 1064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "332:22:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_479fb331f4b24736090aa20dcb0d38fbebbcfae5cc53147972685619a6933bd9",
											"typeString": "literal_string \"You cracked the code\""
										},
										"value": "You cracked the code"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "457:141:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1071,
																	"name": "currentCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "476:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "493:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "476:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1074,
																	"name": "currentCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "499:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "516:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "499:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "476:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465722073686f756c64206265206265747765656e20313020616e64203230",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c",
																"typeString": "literal_string \"Counter should be between 10 and 20\""
															},
															"value": "Counter should be between 10 and 20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f552f89ac28b22cf33b46a7f5e19745ee3d21e592e7cb504abedfe92b620808c",
																"typeString": "literal_string \"Counter should be between 10 and 20\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "468:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "468:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "468:90:1"
											},
											{
												"expression": {
													"id": 1081,
													"name": "_secretMessage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1065,
													"src": "576:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1082,
												"nodeType": "Return",
												"src": "569:21:1"
											}
										]
									},
									"functionSelector": "5b9fdc30",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSecret",
									"nameLocation": "409:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:1"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "443:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:15:1"
									},
									"scope": 1110,
									"src": "400:198:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "680:179:1",
										"statements": [
											{
												"assignments": [
													1088,
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "mathStatus",
														"nameLocation": "697:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "692:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1087,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "692:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "714:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "709:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "709:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 1091,
															"name": "currentCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "724:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "739:6:1",
														"memberName": "tryAdd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "724:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "724:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "691:57:1"
											},
											{
												"condition": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "764:11:1",
													"subExpression": {
														"id": 1096,
														"name": "mathStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "765:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "761:48:1",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "776:33:1",
													"statements": [
														{
															"functionReturnParameters": 1086,
															"id": 1098,
															"nodeType": "Return",
															"src": "791:7:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "currentCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "821:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1104,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "844:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "838:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1102,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "838:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "838:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "821:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "821:30:1"
											}
										]
									},
									"functionSelector": "1687fe8e",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCounter",
									"nameLocation": "656:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:1"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:0:1"
									},
									"scope": 1110,
									"src": "647:212:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "142:720:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:829:1"
				},
				"id": 1
			}
		}
	}
}